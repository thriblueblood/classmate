{"ast":null,"code":"var _jsxFileName = \"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ScrollableChat.js\";\nimport { Avatar, Typography, Box } from '@mui/material';\nimport Tooltip from '@mui/material/Tooltip';\nimport ReactScrollableFeed from \"react-scrollable-feed\";\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from \"../Config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollableChat = _ref => {\n  let {\n    messages\n  } = _ref;\n  const {\n    user\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ReactScrollableFeed, {\n      children: messages && messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [(isSameSender(messages, m, i, user._id) || isLastMessage(messages, i, user._id)) && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"2.5%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: m.sender.name,\n            placement: \"bottom-start\",\n            hasArrow: true,\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              mt: \"7px\",\n              mr: 1,\n              size: \"sm\",\n              cursor: \"pointer\",\n              name: m.sender.name,\n              src: m.sender.pic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: isSameSenderMargin(messages, m, i, user._id),\n            marginTop: isSameUser(messages, m, i, user._id) ? 20 : 20\n          },\n          children: [isSameSender(messages, m, i, user._id) ? /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              display: `${m.sender._id === user._id ? \"none\" : \"\"}`,\n              marginLeft: \"5%\",\n              fo\n            },\n            children: m.sender.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: `${m.sender._id === user._id ? \"#3f72af\" : \"#DBE2EF\"}`,\n              color: `${m.sender._id === user._id ? \"#f9f7f7\" : \"black\"}`,\n              borderRadius: \"20px\",\n              padding: \"5px 15px\",\n              maxWidth: \"75%\"\n            },\n            children: m.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, m._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ScrollableChat;\nexport default ScrollableChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"sources":["/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ScrollableChat.js"],"names":["Avatar","Typography","Box","Tooltip","ReactScrollableFeed","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","ChatState","ThemeProvider","theme","ScrollableChat","messages","user","map","m","i","display","_id","marginTop","sender","name","pic","marginLeft","fo","backgroundColor","color","borderRadius","padding","maxWidth","content"],"mappings":"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","sourcesContent":["import { Avatar,Typography,Box } from '@mui/material';\nimport Tooltip from '@mui/material/Tooltip';\nimport ReactScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../Config/ChatLogics\"\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ThemeProvider theme={theme}>\n<ReactScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{display:\"flex\"}} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n                <div style={{marginTop:\"2.5%\"}}> \n            <Tooltip title={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n                </div>\n                \n            )}\n            <div style={{marginLeft: isSameSenderMargin(messages, m, i, user._id),\n            marginTop: isSameUser(messages, m, i, user._id) ? 20 : 20}}>\n            {isSameSender(messages,m,i,user._id) ? \n              <Typography sx={{\n            display: `${\n                  m.sender._id === user._id ? \"none\" : \"\"\n                }`,marginLeft:\"5%\",\n                fo\n            }}>\n              {m.sender.name}\n            </Typography>  : <div></div>\n            }\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#3f72af\" : \"#DBE2EF\"\n                }`,\n                color: `${\n                  m.sender._id === user._id ? \"#f9f7f7\" : \"black\"\n                }`,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",                \n              }}\n            >\n            {m.content}\n            </span>\n            </div>\n          \n          </div>\n        ))}\n    </ReactScrollableFeed>\n    </ThemeProvider>\n      \n    \n  );\n};\n\nexport default ScrollableChat;"]},"metadata":{},"sourceType":"module"}