{"ast":null,"code":"var _jsxFileName = \"/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/Components/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport { Stack, Avatar, Box, Divider, Typography } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from '@emotion/styled';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { AddRoomPopup } from './AddRoomPopup';\nimport MyRooms from './MyRooms';\nimport { ChatState } from \"../Context/ChatProvider\";\nimport List from \"@mui/material/List\";\nimport ChatLoading from \"../ChatPage/ChatLoading\";\nimport { getSender } from \"../Config/ChatLogics\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSideBarItem = styled(Avatar)(() => ({\n  margin: \"5% 0%\",\n  \":hover\": {\n    backgroundColor: 'red',\n    color: 'black',\n    position: 'relative'\n  },\n  cursor: 'pointer'\n}));\n_c = CustomSideBarItem;\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  /* eslint-disable no-bitwise */\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n\n  return color;\n}\n\nfunction stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name)\n    },\n    children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`\n  };\n}\n\nexport default function SideBar() {\n  _s();\n\n  // const { user} = useState();\n  const [open, setOpen] = React.useState(false);\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n\n  const fetchChats = async () => {\n    if (!user._id) {\n      console.log(\"cant find _id\");\n      return;\n    } // console.log(user._id);\n\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].isGroupChat === true) {\n          console.log(\"inder\" + i);\n          setChats(data);\n        }\n      }\n    } catch (error) {\n      console.log(\"Error fetching chats\");\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n    fetchChats();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n          component: Link,\n          to: \"home\",\n          children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          width: '70%',\n          backgroundColor: \"white\",\n          margin: \"5% 0%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n          onClick: () => setSelectedChat(chat),\n          sx: {\n            fontSize: \"0.5rem\",\n            display: chat.isGroupChat ? chat.chatName : \"none\"\n          },\n          component: Link,\n          to: \"room\",\n          variant: \"rounded\",\n          children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n        }, chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        component: Link,\n        to: \"profile\",\n        sx: {\n          position: \"fixed\",\n          bottom: \"0\",\n          marginBottom: \"1rem\"\n        },\n        cursor: \"pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddRoomPopup, {\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SideBar, \"MVQN3RgL5IzlUkRfzkagWPJNTmw=\");\n\n_c2 = SideBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomSideBarItem\");\n$RefreshReg$(_c2, \"SideBar\");","map":{"version":3,"sources":["/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/Components/SideBar.js"],"names":["Stack","Avatar","Box","Divider","Typography","HomeIcon","AddIcon","styled","React","useState","useEffect","Link","AddRoomPopup","MyRooms","ChatState","List","ChatLoading","getSender","axios","CustomSideBarItem","margin","backgroundColor","color","position","cursor","stringToColor","string","hash","i","length","charCodeAt","value","toString","slice","stringAvatar","name","sx","bgcolor","children","split","SideBar","open","setOpen","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","fetchChats","_id","console","log","config","headers","Authorization","token","data","get","isGroupChat","error","JSON","parse","localStorage","getItem","handleClickOpen","handleClose","width","map","chat","fontSize","display","chatName","users","bottom","marginBottom"],"mappings":"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","sourcesContent":["import { Stack, Avatar, Box, Divider, Typography } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from '@emotion/styled';\n\nimport React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { AddRoomPopup } from './AddRoomPopup';\nimport MyRooms from './MyRooms'\nimport {ChatState} from \"../Context/ChatProvider\"\n\nimport List from \"@mui/material/List\";\nimport ChatLoading from \"../ChatPage/ChatLoading\"\nimport {getSender} from \"../Config/ChatLogics\"\n\nimport axios from \"axios\";\n\nconst CustomSideBarItem = styled(Avatar)(() => ({\n    margin: \"5% 0%\",\n    \":hover\" : {\n        backgroundColor : 'red',\n        color : 'black',\n        position : 'relative'\n    },\n    cursor: 'pointer',\n    \n  }));\n  \n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n  \n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n  \n    let color = '#';\n  \n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    /* eslint-enable no-bitwise */\n  \n    return color;\n  }\n  \n  function stringAvatar(name) {\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n      },\n      children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n    };\n  }\n  \n\nexport default function SideBar(){ \n\n    // const { user} = useState();\n    const [open, setOpen] = React.useState(false);\n\n    const [loggedUser, setLoggedUser] = useState();\n    const { selectedChat, setSelectedChat, user, chats, setChats} = ChatState();\n\n    const fetchChats = async () => {\n      if (!user._id) {\n        console.log(\"cant find _id\");\n        return;\n      }\n        // console.log(user._id);\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n              \n            },\n          };\n          \n          const { data } = await axios.get(\"/api/chat\", config);\n\n          for (let i = 0; i < data.length; i++){\n              if (data[i].isGroupChat === true){\n                console.log(\"inder\"+i)\n                setChats(data);\n              }\n          }\n        } catch (error) {\n          console.log(\"Error fetching chats\")\n        }\n      };\n\n      useEffect(() => {\n        setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n        fetchChats();\n      }, []);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n    return (\n      <div>\n        <Stack alignItems=\"center\">\n            <Box>\n            <Divider/>\n            <CustomSideBarItem component={Link} to=\"home\">\n               <HomeIcon />\n            </CustomSideBarItem>\n            </Box>\n            <Divider sx={{width:'70%', backgroundColor:\"white\", margin:\"5% 0%\"}}/>\n            { chats ? (\n                          <Stack spacing={1}>\n                              {chats.map((chat) => (\n                                    <CustomSideBarItem\n                                    onClick={() => setSelectedChat(chat)}\n                                    key={chat._id}\n                                    sx = {{fontSize:\"0.5rem\",display: chat.isGroupChat ? chat.chatName: \"none\"}}\n                                    component={Link} to=\"room\" variant='rounded'\n                                    >\n\n                                      {!chat.isGroupChat \n                                            ? getSender(loggedUser, chat.users)\n                                            :chat.chatName}\n                                    \n                                    {/* <Avatar\n                                    sx={{marginRight:\"2%\"}}\n                                    size=\"sm\"\n                                    cursor=\"pointer\"\n                                    src={chats.pic} */}\n                                    \n                                    {/* /> */}\n                                        {/* <Typography>\n                                            {!chat.isGroupChat \n                                            ? getSender(loggedUser, chat.users)\n                                            :chat.chatName}\n                                            \n                                        </Typography>\n                                         */}\n                                    </CustomSideBarItem>\n                                ))}\n                          </Stack>\n                               \n                        ) : (\n                            <ChatLoading/>\n                        )}\n            {/* <CustomSideBarItem component={Link} to=\"room\" variant='rounded'>\n                SE\n            </CustomSideBarItem>\n            <MyRooms/> */}\n            <CustomSideBarItem onClick={handleClickOpen} >\n               <AddIcon/>\n            </CustomSideBarItem>\n            <Avatar \n            \n            component={Link} to=\"profile\" \n            sx={{position:\"fixed\", bottom:\"0\", \n            marginBottom:\"1rem\"}}\n            \n            cursor=\"pointer\"\n            \n            />\n        </Stack>\n        <AddRoomPopup open={open} onClose={handleClose} />\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}