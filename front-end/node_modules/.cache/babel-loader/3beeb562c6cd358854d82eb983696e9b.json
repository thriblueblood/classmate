{"ast":null,"code":"var _jsxFileName = \"/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/ChatPage/UpdateGroupChatModal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport { IconButton, Typography, FormControl, InputLabel, Input, FormHelperText, Button } from '@mui/material';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport { useState } from 'react';\nimport { ChatState } from \"../Context/ChatProvider\";\nimport UserBadgeItem from \"../Miscellaneous/UserBadgeItem\";\nimport axios from \"axios\";\nimport UserListItem from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateGroupChatModal = _ref => {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain,\n    fetchMessage\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const {\n    selectedChat,\n    setSelectedChat,\n    user\n  } = ChatState();\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    border: '2px solid #000',\n    boxShadow: 24,\n    p: 4\n  };\n\n  const handleRemove = async user1 => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      console.log(\"only admin can remove\");\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/chat/groupremove`, {\n        chatId: selectedChat._id,\n        userId: user1._id\n      }, config);\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessage();\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n\n    setGroupChatName(\"\");\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/chat/rename`, {\n        chatId: selectedChat._id,\n        chatName: groupChatName\n      }, config);\n      console.log(data._id); // setSelectedChat(\"\");\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      setRenameLoading(false);\n    }\n\n    setGroupChatName(\"\");\n  };\n\n  const handleSearch = async query => {\n    setSearch(query);\n\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {}\n  };\n\n  const handleAddUser = async user1 => {\n    if (selectedChat.users.find(u => u._id === user1._id)) {\n      console.log(\"user already in group\");\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      console.log(\"only admin can add\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/chat/groupadd`, {\n        chatId: selectedChat._id,\n        userId: user1._id\n      }, config);\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n\n    setGroupChatName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GroupsIcon, {\n      onClick: handleOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          children: selectedChat.chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: selectedChat.users.map(u => /*#__PURE__*/_jsxDEV(UserBadgeItem, {\n            user: u,\n            handleFunction: () => handleRemove(u)\n          }, u._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          d: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            value: groupChatName,\n            placeholder: \"user name\",\n            onChange: e => setGroupChatName(e.target.value),\n            children: \"user name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"solid\",\n            isLoading: renameloading,\n            onClick: handleRename,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Add User to group\",\n            mb: 1,\n            onChange: e => handleSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          onClick: () => handleRemove(user),\n          children: \"Leave Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), loading ?\n        /*#__PURE__*/\n        // <ChatLoading />\n        _jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this) : searchResult === null || searchResult === void 0 ? void 0 : searchResult.slice(0, 3).map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          user: user,\n          handleFunction: () => handleAddUser(user)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n};\n\n_s(UpdateGroupChatModal, \"o3GUuByyit1msUtk4Vseza9aVF0=\");\n\n_c = UpdateGroupChatModal;\nexport default UpdateGroupChatModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateGroupChatModal\");","map":{"version":3,"sources":["/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/ChatPage/UpdateGroupChatModal.js"],"names":["React","GroupsIcon","IconButton","Typography","FormControl","InputLabel","Input","FormHelperText","Button","Box","Modal","useState","ChatState","UserBadgeItem","axios","UserListItem","UpdateGroupChatModal","fetchAgain","setFetchAgain","fetchMessage","open","setOpen","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameloading","setRenameLoading","selectedChat","setSelectedChat","user","handleOpen","handleClose","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","handleRemove","user1","groupAdmin","_id","console","log","config","headers","Authorization","token","data","put","chatId","userId","error","handleRename","chatName","handleSearch","query","get","handleAddUser","users","find","u","mt","map","e","target","value","slice"],"mappings":"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","sourcesContent":["import React from 'react'\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport { IconButton, Typography, FormControl , InputLabel, Input, FormHelperText, Button} from '@mui/material';\nimport Box from '@mui/material/Box'\nimport Modal from '@mui/material/Modal'\nimport {useState} from 'react'\nimport { ChatState} from \"../Context/ChatProvider\"\nimport UserBadgeItem from \"../Miscellaneous/UserBadgeItem\"\nimport axios from \"axios\"\nimport UserListItem from './'\n\nconst UpdateGroupChatModal = ({fetchAgain, setFetchAgain, fetchMessage}) => {\n    const [open, setOpen] = React.useState(false);\n    const [groupChatName, setGroupChatName] = useState();\n    const [search, setSearch] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [renameloading, setRenameLoading] = useState(false);\n\n    const { selectedChat, setSelectedChat, user } = ChatState();\n\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n      };\n\n      const handleRemove = async (user1) => {\n        if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n          console.log(\"only admin can remove\");\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/api/chat/groupremove`,\n            {\n              chatId: selectedChat._id,\n              userId: user1._id,\n            },\n            config\n          );\n    \n          user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n          setFetchAgain(!fetchAgain);\n          fetchMessage();\n          setLoading(false);\n        } catch (error) {\n          console.log(error)\n          setLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n\n\n      const handleRename = async () => {\n        if (!groupChatName) return;\n    \n        try {\n          setRenameLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/api/chat/rename`,\n            {\n              chatId: selectedChat._id,\n              chatName: groupChatName,\n            },\n            config\n          );\n    \n          console.log(data._id);\n          // setSelectedChat(\"\");\n          setSelectedChat(data);\n          setFetchAgain(!fetchAgain);\n          setRenameLoading(false);\n        } catch (error) {\n          \n          setRenameLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n\n\n      const handleSearch = async (query) => {\n        setSearch(query);\n        if (!query) {\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.get(`/api/user?search=${search}`, config);\n          console.log(data);\n          setLoading(false);\n          setSearchResult(data);\n        } catch (error) {\n          \n        }\n      };\n\n      const handleAddUser = async (user1) => {\n        if (selectedChat.users.find((u) => u._id === user1._id)) {\n          console.log(\"user already in group\")\n          return;\n        }\n    \n        if (selectedChat.groupAdmin._id !== user._id) {\n          console.log(\"only admin can add\")\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/api/chat/groupadd`,\n            {\n              chatId: selectedChat._id,\n              userId: user1._id,\n            },\n            config\n          );\n    \n          setSelectedChat(data);\n          setFetchAgain(!fetchAgain);\n          setLoading(false);\n        } catch (error) {\n          console.log(error)\n          setLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n    \n  \n    return (\n      <div>\n        <GroupsIcon onClick={handleOpen} ></GroupsIcon>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              {selectedChat.chatName}\n            </Typography>\n            <Box id=\"modal-modal-description\" sx={{ mt: 2 }}>\n              {selectedChat.users.map(u =>(\n                <UserBadgeItem\n                key={u._id}\n                user={u}\n                handleFunction={() => handleRemove(u)}\n              />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n                \n                <Input value={groupChatName} \n                placeholder=\"user name\"\n                onChange={(e)=> setGroupChatName(e.target.value)}>user name</Input>\n                <Button\n                variant=\"solid\"\n                isLoading={renameloading}\n                onClick={handleRename}\n                >\n                Update\n                </Button>\n  {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Button variant=\"ghost\" onClick={()=> handleRemove(user)} >Leave Group</Button>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 3)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleAddUser(user)}\n                  />\n                ))\n            )}\n\n          </Box>\n        </Modal>\n      </div>\n    );\n}\n\nexport default UpdateGroupChatModal"]},"metadata":{},"sourceType":"module"}