{"ast":null,"code":"var _jsxFileName = \"/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/ChatPage/SingleChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { ChatState } from '../../Context/ChatProvider';\nimport Box from '@mui/material/Box';\nimport { Typography, FormControl, Input } from '@mui/material';\nimport { getSender } from \"../../Config/ChatLogics\";\nimport UpdateGroupChatModal from './UpdateGroupChatModal';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport ScrollableChat from './ScrollableChat';\nimport io from 'socket.io-client';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleChat = _ref => {\n  _s();\n\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState();\n  const {\n    user,\n    selectedChat,\n    setSelectedChat\n  } = ChatState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\"\n        },\n        pb: 3,\n        px: 2,\n        w: \"100%\",\n        fontFamily: \"Work sans\",\n        d: \"flex\",\n        justifyContent: {\n          base: \"space-between\"\n        },\n        alignItems: \"center\",\n        children: !selectedChat.isGroupChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: getSender(user, selectedChat.users)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [selectedChat.chatName.toUpperCase(), /*#__PURE__*/_jsxDEV(UpdateGroupChatModal, {\n            fetchAgain: fetchAgain,\n            setFetchAgain: setFetchAgain //   fetchMessages={fetchMessages}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          d: \"flex\",\n          flexDir: \"column\",\n          justifyContent: \"flex-end\" // padding=\"10\"\n          ,\n          backgroundColor: \"#E8E8E8\",\n          w: \"100%\",\n          h: \"100%\",\n          borderRadius: \"10\",\n          padding: \"10\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages\",\n            children: /*#__PURE__*/_jsxDEV(ScrollableChat, {\n              messages: messages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            onKeyDown: sendMessage,\n            isRequire: true,\n            mt: 3,\n            children: [istyping ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Input // variant=\"filled\"\n            , {\n              backgroundColor: \"#E0E0E0\",\n              placeholder: \"Enter a message..\" // onChange={typingHandler}\n              ,\n              value: newMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      h: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        fontFamily: \"Work sans\",\n        fontSize: \"50px\",\n        children: \"Click on a user to start chatting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SingleChat, \"0N85zgwirUfXFtKyDN8BnmCskm4=\");\n\n_c = SingleChat;\nexport default SingleChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleChat\");","map":{"version":3,"sources":["/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/ChatPage/SingleChat.js"],"names":["React","useEffect","ChatState","Box","Typography","FormControl","Input","getSender","UpdateGroupChatModal","CircularProgress","useState","axios","ScrollableChat","io","SingleChat","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessage","setNewMessage","user","selectedChat","setSelectedChat","base","md","isGroupChat","users","chatName","toUpperCase","sendMessage","istyping"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { ChatState } from '../../Context/ChatProvider'\nimport Box from '@mui/material/Box'\nimport { Typography, FormControl, Input } from '@mui/material';\nimport {getSender} from \"../../Config/ChatLogics\"\nimport UpdateGroupChatModal from './UpdateGroupChatModal';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {useState} from 'react'\nimport axios from 'axios'\nimport ScrollableChat from './ScrollableChat'\nimport io from 'socket.io-client'\n\nconst SingleChat = ({fetchAgain, setFetchAgain}) => {\n\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [newMessage, setNewMessage] = useState();\n\n    const { user, selectedChat, setSelectedChat} = ChatState();\n    return (\n        <div>\n            {selectedChat ? (\n                <>\n                <Typography\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n              {!selectedChat.isGroupChat ? (\n                  <>\n                    {getSender(user,selectedChat.users)}\n                    {/* profilemodal */}\n                  </>\n              ) : (\n                  <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                  fetchAgain={fetchAgain}\n                  setFetchAgain={setFetchAgain}\n                //   fetchMessages={fetchMessages}\n                  />\n                  </>\n              )}\n          </Typography>\n          <Typography>\n              \n              <Box d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            // padding=\"10\"\n            backgroundColor=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"10\"\n            padding = \"10\"\n            >\n                {loading ? (\n                    <CircularProgress />\n                ):(\n                <div className=\"messages\">\n                    <ScrollableChat messages={messages}/>\n                </div>\n                )}\n                <FormControl onKeyDown={sendMessage} isRequire mt={3}>\n                    {istyping ? <div>Loading...</div> : <></>}\n                    <Input\n                        // variant=\"filled\"\n                        backgroundColor=\"#E0E0E0\"\n                        placeholder=\"Enter a message..\"\n                        // onChange={typingHandler}\n                        value={newMessage}\n                    />\n                </FormControl>\n              </Box>\n          </Typography>\n                </>\n            ) : (\n                <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\" >\n                    <Typography fontFamily=\"Work sans\" fontSize=\"50px\">\n                        Click on a user to start chatting\n                    </Typography>\n                    \n\n                </Box>\n\n            )}\n        </div>\n    )\n}\n\nexport default SingleChat\n"]},"metadata":{},"sourceType":"module"}