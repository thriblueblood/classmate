{"ast":null,"code":"var _jsxFileName = \"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport { Stack, Avatar, Box, Divider, Typography } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from '@emotion/styled';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { AddRoomPopup } from './AddRoomPopup';\nimport MyRooms from './MyRooms';\nimport { ChatState } from \"../Context/ChatProvider\";\nimport List from \"@mui/material/List\";\nimport ChatLoading from \"../ChatPage/ChatLoading\";\nimport { getSender } from \"../Config/ChatLogics\";\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSideBarItem = styled(Avatar)(() => ({\n  margin: \"5% 0%\",\n  \":hover\": {\n    backgroundColor: 'red',\n    color: 'black',\n    position: 'relative'\n  },\n  cursor: 'pointer'\n}));\n_c = CustomSideBarItem;\n\nconst hoverButton = _ref => {\n  let {\n    handleMouseOver,\n    handleMouseOut\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    onMouseOver: handleMouseOver,\n    children: /*#__PURE__*/_jsxDEV(CustomSideBarItem, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  /* eslint-disable no-bitwise */\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n\n  return color;\n}\n\nfunction splitString(name) {\n  let lstString = name.split(\" \");\n  let result = \"\";\n\n  for (let i = 0; i < lstString.length; i++) {\n    result += lstString[i][0];\n  }\n\n  result = result.slice(0, 3).toUpperCase();\n  return result;\n}\n\nexport default function SideBar() {\n  _s();\n\n  // const { user} = useState();\n  const [open, setOpen] = React.useState(false);\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n  const [loading, setLoading] = useState(true); // const fetchChats = async () => {\n  //   if (!user._id) {\n  //     console.log(\"cant find _id\");\n  //     return;\n  //   }\n  //     // console.log(user._id);\n  //     try {\n  //       const config = {\n  //         headers: {\n  //           Authorization: `Bearer ${user.token}`,\n  //         },\n  //       };\n  //       const { data } = await axios.get(\"/api/chat\", config);\n  //       for (let i = 0; i < data.length; i++){\n  //           if (data[i].isGroupChat === true){\n  //             console.log(\"inder\"+i)\n  //             setChats(data);\n  //           }\n  //       }\n  //       setLoading(false)\n  //     } catch (error) {\n  //       console.log(\"Error fetching chats\")\n  //     }\n  //   };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\"))); // fetchChats();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n          component: Link,\n          to: \"home\",\n          children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          width: '70%',\n          backgroundColor: \"white\",\n          margin: \"5% 0%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), chats ? /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 1,\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n          onClick: () => setSelectedChat(chat),\n          sx: {\n            fontSize: \"1rem\",\n            display: chat.isGroupChat ? chat.chatName : \"none\",\n            bgcolor: stringToColor(chat.chatName),\n            color: \"black\",\n            textDecoration: \"none\"\n          },\n          component: Link,\n          to: \"room/chat\",\n          variant: \"rounded\",\n          children: splitString(chat.chatName)\n        }, chat._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        component: Link,\n        to: \"profile\",\n        sx: {\n          position: \"fixed\",\n          bottom: \"0\",\n          marginBottom: \"1rem\"\n        },\n        cursor: \"pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddRoomPopup, {\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SideBar, \"ZphKsQBPmk+M4BuiZlH0jMdNnmQ=\");\n\n_c2 = SideBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomSideBarItem\");\n$RefreshReg$(_c2, \"SideBar\");","map":{"version":3,"sources":["/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SideBar.js"],"names":["Stack","Avatar","Box","Divider","Typography","HomeIcon","AddIcon","styled","React","useState","useEffect","Link","AddRoomPopup","MyRooms","ChatState","List","ChatLoading","getSender","CircularProgress","axios","CustomSideBarItem","margin","backgroundColor","color","position","cursor","hoverButton","handleMouseOver","handleMouseOut","stringToColor","string","hash","i","length","charCodeAt","value","toString","slice","splitString","name","lstString","split","result","toUpperCase","SideBar","open","setOpen","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","loading","setLoading","JSON","parse","localStorage","getItem","handleClickOpen","handleClose","width","map","chat","fontSize","display","isGroupChat","chatName","bgcolor","textDecoration","_id","bottom","marginBottom"],"mappings":"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","sourcesContent":["import { Stack, Avatar, Box, Divider, Typography } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from '@emotion/styled';\n\nimport React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { AddRoomPopup } from './AddRoomPopup';\nimport MyRooms from './MyRooms'\nimport {ChatState} from \"../Context/ChatProvider\"\n\nimport List from \"@mui/material/List\";\nimport ChatLoading from \"../ChatPage/ChatLoading\"\nimport {getSender} from \"../Config/ChatLogics\"\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport axios from \"axios\";\n\nconst CustomSideBarItem = styled(Avatar)(() => ({\n    margin: \"5% 0%\",\n    \":hover\" : {\n        backgroundColor : 'red',\n        color : 'black',\n        position : 'relative'\n    },\n    cursor: 'pointer',\n    \n  }));\n\n  const hoverButton = ({handleMouseOver, handleMouseOut}) =>{\n    return <Box onMouseOver={handleMouseOver} >\n      <CustomSideBarItem/>\n    </Box>\n  }\n  \n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n  \n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n  \n    let color = '#';\n  \n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    /* eslint-enable no-bitwise */\n  \n    return color;\n  }\n  \n  \n  function splitString(name) {\n    let lstString = name.split(\" \")\n    let result = \"\"\n    for (let i = 0; i < lstString.length; i++) {\n        result += lstString[i][0]\n    }\n    result = result.slice(0, 3).toUpperCase()\n    return result\n}\n\nexport default function SideBar(){ \n\n    // const { user} = useState();\n    const [open, setOpen] = React.useState(false);\n\n    const [loggedUser, setLoggedUser] = useState();\n    const { selectedChat, setSelectedChat, user, chats, setChats} = ChatState();\n    const [loading, setLoading] = useState(true);\n\n    // const fetchChats = async () => {\n    //   if (!user._id) {\n    //     console.log(\"cant find _id\");\n    //     return;\n    //   }\n    //     // console.log(user._id);\n    //     try {\n    //       const config = {\n    //         headers: {\n    //           Authorization: `Bearer ${user.token}`,\n              \n    //         },\n    //       };\n          \n    //       const { data } = await axios.get(\"/api/chat\", config);\n\n    //       for (let i = 0; i < data.length; i++){\n    //           if (data[i].isGroupChat === true){\n    //             console.log(\"inder\"+i)\n    //             setChats(data);\n    //           }\n    //       }\n    //       setLoading(false)\n    //     } catch (error) {\n    //       console.log(\"Error fetching chats\")\n    //     }\n    //   };\n\n      useEffect(() => {\n        setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n        // fetchChats();\n      }, []);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n    return (\n      <div>\n        <Stack alignItems=\"center\">\n            <Box>\n            <Divider/>\n            <CustomSideBarItem component={Link} to=\"home\">\n               <HomeIcon />\n            </CustomSideBarItem>\n            </Box>\n            <Divider sx={{width:'70%', backgroundColor:\"white\", margin:\"5% 0%\"}}/>\n            {chats ? (\n                          <Stack spacing={1}>\n                              {chats.map((chat) => (\n                                    <CustomSideBarItem\n                                    onClick={() => setSelectedChat(chat)}\n                                    key={chat._id}\n                                    sx = {{fontSize:\"1rem\",display: chat.isGroupChat ? chat.chatName: \"none\", bgcolor: stringToColor(chat.chatName), color:\"black\", textDecoration:\"none\"}}\n                                    component={Link} to=\"room/chat\" variant='rounded'\n                                    >\n                                      {splitString(chat.chatName)}\n                                    \n                                    {/* <Avatar\n                                    sx={{marginRight:\"2%\"}}\n                                    size=\"sm\"\n                                    cursor=\"pointer\"\n                                    src={chats.pic} */}\n                                    \n                                    {/* /> */}\n                                        {/* <Typography>\n                                            {!chat.isGroupChat \n                                            ? getSender(loggedUser, chat.users)\n                                            :chat.chatName}\n                                            \n                                        </Typography>\n                                         */}\n                                    </CustomSideBarItem>\n                                ))}\n                          </Stack>\n                               \n                        ) : (\n                            <ChatLoading/>\n                        )}\n            {/* <CustomSideBarItem component={Link} to=\"room\" variant='rounded'>\n                SE\n            </CustomSideBarItem>\n            <MyRooms/> */}\n            <CustomSideBarItem onClick={handleClickOpen} >\n               <AddIcon/>\n            </CustomSideBarItem>\n            <Avatar \n            \n            component={Link} to=\"profile\" \n            sx={{position:\"fixed\", bottom:\"0\", \n            marginBottom:\"1rem\"}}\n            \n            cursor=\"pointer\"\n            \n            />\n        </Stack>\n        <AddRoomPopup open={open} onClose={handleClose} />\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}