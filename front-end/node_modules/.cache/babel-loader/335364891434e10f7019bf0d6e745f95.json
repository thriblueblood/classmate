{"ast":null,"code":"var _jsxFileName = \"/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/Components/SideBar.js\",\n    _s = $RefreshSig$();\n\nimport { Stack, Avatar, Box, Divider } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from '@emotion/styled';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { AddRoomPopup } from './AddRoomPopup';\nimport MyRooms from './MyRooms';\nimport { ChatState } from \"../Context/ChatProvider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomSideBarItem = styled(Avatar)(() => ({\n  margin: \"5% 0%\",\n  \":hover\": {\n    backgroundColor: 'red',\n    color: 'black',\n    position: 'relative'\n  },\n  cursor: 'pointer'\n}));\n_c = CustomSideBarItem;\nexport default function SideBar() {\n  _s();\n\n  // const { user} = useState();\n  const [open, setOpen] = React.useState(false);\n  const [loggedUser, setLoggedUser] = useState();\n  const {\n    selectedChat,\n    setSelectedChat,\n    user,\n    chats,\n    setChats\n  } = ChatState();\n\n  const fetchChats = async () => {\n    if (!user._id) {\n      console.log(\"cant find _id\");\n      return;\n    } // console.log(user._id);\n\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(\"/api/chat\", config);\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i].isGroupChat === true) {\n          console.log(\"inder\" + i);\n          setChats(data);\n        }\n      }\n    } catch (error) {\n      console.log(\"Error fetching chats\");\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n    fetchChats();\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n          component: Link,\n          to: \"home\",\n          children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          width: '70%',\n          backgroundColor: \"white\",\n          margin: \"5% 0%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), chats ? /*#__PURE__*/_jsxDEV(List, {\n        style: {\n          maxHeight: 500,\n          overflow: 'auto'\n        },\n        fontSize: \"1rem\",\n        children: chats.map(chat => /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n          onClick: () => setSelectedChat(chat),\n          py: 2,\n          borderRadius: \"5px\",\n          sx: {\n            display: chat.isGroupChat ? chat.chatName : \"none\"\n          },\n          children: [\"/>\", /*#__PURE__*/_jsxDEV(Typography, {\n            children: !chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }, this)]\n        }, chat._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(CustomSideBarItem, {\n        onClick: handleClickOpen,\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        component: Link,\n        to: \"profile\",\n        sx: {\n          position: \"fixed\",\n          bottom: \"0\",\n          marginBottom: \"1rem\"\n        },\n        cursor: \"pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddRoomPopup, {\n      open: open,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SideBar, \"MVQN3RgL5IzlUkRfzkagWPJNTmw=\");\n\n_c2 = SideBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomSideBarItem\");\n$RefreshReg$(_c2, \"SideBar\");","map":{"version":3,"sources":["/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/Components/SideBar.js"],"names":["Stack","Avatar","Box","Divider","HomeIcon","AddIcon","styled","React","useState","useEffect","Link","AddRoomPopup","MyRooms","ChatState","axios","CustomSideBarItem","margin","backgroundColor","color","position","cursor","SideBar","open","setOpen","loggedUser","setLoggedUser","selectedChat","setSelectedChat","user","chats","setChats","fetchChats","_id","console","log","config","headers","Authorization","token","data","get","i","length","isGroupChat","error","JSON","parse","localStorage","getItem","handleClickOpen","handleClose","width","maxHeight","overflow","map","chat","display","chatName","getSender","users","bottom","marginBottom"],"mappings":"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","sourcesContent":["import { Stack, Avatar, Box, Divider } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from '@emotion/styled';\n\nimport React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { AddRoomPopup } from './AddRoomPopup';\nimport MyRooms from './MyRooms'\nimport {ChatState} from \"../Context/ChatProvider\"\n\nimport axios from \"axios\";\n\nconst CustomSideBarItem = styled(Avatar)(() => ({\n    margin: \"5% 0%\",\n    \":hover\" : {\n        backgroundColor : 'red',\n        color : 'black',\n        position : 'relative'\n    },\n    cursor: 'pointer',\n    \n  }));\n\n\nexport default function SideBar(){ \n\n    // const { user} = useState();\n    const [open, setOpen] = React.useState(false);\n\n    const [loggedUser, setLoggedUser] = useState();\n    const { selectedChat, setSelectedChat, user, chats, setChats} = ChatState();\n\n    const fetchChats = async () => {\n      if (!user._id) {\n        console.log(\"cant find _id\");\n        return;\n      }\n        // console.log(user._id);\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n              \n            },\n          };\n          \n          const { data } = await axios.get(\"/api/chat\", config);\n\n          for (let i = 0; i < data.length; i++){\n              if (data[i].isGroupChat === true){\n                console.log(\"inder\"+i)\n                setChats(data);\n              }\n          }\n        } catch (error) {\n          console.log(\"Error fetching chats\")\n        }\n      };\n\n      useEffect(() => {\n        setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n        fetchChats();\n      }, []);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n    return (\n      <div>\n        <Stack alignItems=\"center\">\n            <Box>\n            <Divider/>\n            <CustomSideBarItem component={Link} to=\"home\">\n               <HomeIcon />\n            </CustomSideBarItem>\n            </Box>\n            <Divider sx={{width:'70%', backgroundColor:\"white\", margin:\"5% 0%\"}}/>\n            { chats ? (\n                            <List style = {{ maxHeight: 500, overflow: 'auto',}} fontSize=\"1rem\" >\n                                {chats.map((chat) => (\n                                    <CustomSideBarItem\n                                    onClick={() => setSelectedChat(chat)}\n                                    py={2}\n                                    borderRadius=\"5px\"\n                                    key={chat._id}\n                                    sx = {{display: chat.isGroupChat ? chat.chatName: \"none\"}}\n                                    >\n                                    \n                                    {/* <Avatar\n                                    sx={{marginRight:\"2%\"}}\n                                    size=\"sm\"\n                                    cursor=\"pointer\"\n                                    src={chats.pic} */}\n                                    \n                                    />\n                                        <Typography>\n                                            {!chat.isGroupChat \n                                            ? getSender(loggedUser, chat.users)\n                                            :chat.chatName}\n                                            \n                                        </Typography>\n                                        \n                                    </CustomSideBarItem>\n                                ))}\n                            </List>\n                        ) : (\n                            <ChatLoading/>\n                        )}\n            {/* <CustomSideBarItem component={Link} to=\"room\" variant='rounded'>\n                SE\n            </CustomSideBarItem>\n            <MyRooms/> */}\n            <CustomSideBarItem onClick={handleClickOpen} >\n               <AddIcon/>\n            </CustomSideBarItem>\n            <Avatar \n            \n            component={Link} to=\"profile\" \n            sx={{position:\"fixed\", bottom:\"0\", \n            marginBottom:\"1rem\"}}\n            \n            cursor=\"pointer\"\n            \n            />\n        </Stack>\n        <AddRoomPopup open={open} onClose={handleClose} />\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}