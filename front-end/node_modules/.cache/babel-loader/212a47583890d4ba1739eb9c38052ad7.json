{"ast":null,"code":"var _jsxFileName = \"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/SlideDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from \"@mui/material/Button\";\nimport { Typography, Drawer, TextField } from '@mui/material';\nimport Box from \"@mui/material/Box\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport ChatLoading from \"./ChatLoading\";\nimport UserListItem from \"./UserListItem\";\nimport axios from 'axios';\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SlideDrawer = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState();\n\n  const handleClose = () => setOpen(false);\n\n  const {\n    user,\n    setSelectedChat,\n    chats,\n    setChats\n  } = ChatState();\n\n  const toggleDrawer = newOpen => event => {\n    setOpen(newOpen);\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      console.log(\"error no search entered\");\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      console.log(\"error can't fetch data\");\n    }\n  };\n\n  const accessChat = async userId => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(`/api/chat`, {\n        userId\n      }, config);\n      if (!chats.find(c => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      handleClose(false);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleDrawer(true),\n        sx: {\n          backgroundColor: \"primary.main\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          fontSize: \"1.25em\",\n          color: \"secondary.main\",\n          px: 2,\n          children: \"Make some conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"left\",\n        open: open,\n        onClose: toggleDrawer(false),\n        onOpen: toggleDrawer(true),\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Say something\",\n            fullWidth: true,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(SendIcon, {\n                  sx: {\n                    cursor: 'pointer',\n                    color: \"primary.main\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this) : searchResult === null || searchResult === void 0 ? void 0 : searchResult.map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n          user: user,\n          handleFunction: () => accessChat(user._id)\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SlideDrawer, \"Waxnxe+slYLJhYeIFWQlIXEp8+s=\");\n\n_c = SlideDrawer;\nexport default SlideDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideDrawer\");","map":{"version":3,"sources":["/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/SlideDrawer.js"],"names":["React","useState","Button","Typography","Drawer","TextField","Box","ChatState","ChatLoading","UserListItem","axios","ThemeProvider","theme","SlideDrawer","search","setSearch","searchResult","setSearchResult","open","setOpen","loading","setLoading","loadingChat","setLoadingChat","handleClose","user","setSelectedChat","chats","setChats","toggleDrawer","newOpen","event","handleSearch","console","log","config","headers","Authorization","token","data","get","error","accessChat","userId","post","find","c","_id","backgroundColor","endAdornment","cursor","color","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState} from 'react'\nimport Button from \"@mui/material/Button\"\nimport { Typography, Drawer, TextField } from '@mui/material'\nimport Box from \"@mui/material/Box\";\nimport { ChatState} from \"../Context/ChatProvider\"\nimport ChatLoading from \"./ChatLoading\"\nimport UserListItem from \"./UserListItem\"\nimport axios from 'axios'\n\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\n\n\n\n const SlideDrawer = () => {\n    const [search, setSearch] = useState(\"\")\n    const [searchResult, setSearchResult] = useState([])\n    const [open, setOpen] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [loadingChat, setLoadingChat] = useState();\n    const handleClose = () => setOpen(false)\n\n    const { user, setSelectedChat, chats, setChats} = ChatState();\n    const toggleDrawer = (newOpen) => (event) => {\n        setOpen(newOpen)\n    }\n\n    const handleSearch = async() => {\n        if(!search){\n            console.log(\"error no search entered\")\n        }\n\n        try{\n\n            const config = {\n                headers: {\n                    \n                    Authorization: `Bearer ${user.token}`,\n                }\n            };\n            const { data} = await axios.get(`/api/user?search=${search}`, config)\n            \n\n            setLoading(false);\n            setSearchResult(data);\n\n        }catch (error){\n            console.log(\"error can't fetch data\");\n        }\n    }\n\n    const accessChat = async (userId) => {\n        console.log(userId);\n    \n        try {\n          setLoadingChat(true);\n\n          const config = {\n            headers: {\n              \"Content-type\": \"application/json\",\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n\n          const { data } = await axios.post(`/api/chat`, { userId }, config);\n    \n          if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n\n          setSelectedChat(data);\n          setLoadingChat(false);\n          \n          handleClose(false);\n        } catch (error) {\n\n        }\n      };\n\n    return (\n      <ThemeProvider theme={theme}>\n  <div>\n            <Button onClick={toggleDrawer(true)} sx={{backgroundColor:\"primary.main\"}}>\n                {/* <i class=\"fas fa-search\"></i> */}\n                <Typography variant=\"h2\" fontSize=\"1.25em\" color=\"secondary.main\" px={2}>Make some conversation</Typography>\n            </Button>\n\n          <Drawer\n            anchor={\"left\"}\n            open={open}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n          >\n            {/* <Box d=\"flex\" pb={2}>\n                <Typography variant=\"h5\">Search user</Typography>\n                <input\n                placeholder=\"Type...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                >\n                </input>\n                <Button onClick={handleSearch} variant=\"ghost\"> Go </Button>\n            </Box> */}\n            <form noValidate autoComplete=\"off\">\n         <TextField label=\"Say something\" fullWidth \n            InputProps={{ endAdornment:(<InputAdornment position=\"end\">\n                <IconButton>\n                </IconButton>\n                <SendIcon sx={{cursor:'pointer', color:\"primary.main\"}}/>\n              </InputAdornment>)}}></TextField>\n      </form>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n          </Drawer>\n        </div>\n      </ThemeProvider>\n      \n    )\n}\n\nexport default SlideDrawer\n"]},"metadata":{},"sourceType":"module"}