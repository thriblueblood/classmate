{"ast":null,"code":"var _jsxFileName = \"/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/ChatPage/SlideDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Button from \"@mui/material/Button\";\nimport { Typography, Drawer } from '@mui/material';\nimport Box from \"@mui/material/Box\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport ChatLoading from \"./ChatLoading\";\nimport UserListItem from \"./UserListItem\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SlideDrawer = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState();\n  const {\n    user,\n    setSelectedChat,\n    chats,\n    setChats\n  } = ChatState();\n\n  const toggleDrawer = newOpen => event => {\n    setOpen(newOpen);\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      console.log(\"error no search entered\");\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      console.log(\"error can't fetch data\");\n    }\n  };\n\n  const accessChat = async userId => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(`/api/chat`, {\n        userId\n      }, config);\n      if (!chats.find(c => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      toggleDrawer(false);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleDrawer(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        px: 2,\n        children: \"Search user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: open,\n      onClose: toggleDrawer(false),\n      onOpen: toggleDrawer(true),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        d: \"flex\",\n        pb: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Search user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Type...\",\n          value: search,\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSearch,\n          variant: \"ghost\",\n          children: \" Go \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), loading ? /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }, this) : searchResult === null || searchResult === void 0 ? void 0 : searchResult.map(user => /*#__PURE__*/_jsxDEV(UserListItem, {\n        user: user,\n        handleFunction: () => accessChat(user._id)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SlideDrawer, \"Waxnxe+slYLJhYeIFWQlIXEp8+s=\");\n\n_c = SlideDrawer;\nexport default SlideDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlideDrawer\");","map":{"version":3,"sources":["/Users/purepolachan/Desktop/classmate_thri/classmate/front-end/src/ChatPage/SlideDrawer.js"],"names":["React","useState","Button","Typography","Drawer","Box","ChatState","ChatLoading","UserListItem","axios","SlideDrawer","search","setSearch","searchResult","setSearchResult","open","setOpen","loading","setLoading","loadingChat","setLoadingChat","user","setSelectedChat","chats","setChats","toggleDrawer","newOpen","event","handleSearch","console","log","config","headers","Authorization","token","data","get","error","accessChat","userId","post","find","c","_id","e","target","value","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState} from 'react'\nimport Button from \"@mui/material/Button\"\nimport { Typography, Drawer } from '@mui/material'\nimport Box from \"@mui/material/Box\";\nimport { ChatState} from \"../Context/ChatProvider\"\nimport ChatLoading from \"./ChatLoading\"\nimport UserListItem from \"./UserListItem\"\nimport axios from 'axios'\n\n\n\n const SlideDrawer = () => {\n\n    const [search, setSearch] = useState(\"\")\n    const [searchResult, setSearchResult] = useState([])\n    const [open, setOpen] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [loadingChat, setLoadingChat] = useState();\n\n    const { user, setSelectedChat, chats, setChats} = ChatState();\n    const toggleDrawer = (newOpen) => (event) => {\n        setOpen(newOpen)\n        \n\n    }\n\n    const handleSearch = async() => {\n        if(!search){\n            console.log(\"error no search entered\")\n        }\n\n        try{\n            const config = {\n                headers: {\n                    \n                    Authorization: `Bearer ${user.token}`,\n                }\n            };\n            \n            const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n            setLoading(false);\n            setSearchResult(data);\n\n        }catch (error){\n            console.log(\"error can't fetch data\");\n        }\n    }\n\n    const accessChat = async (userId) => {\n        console.log(userId);\n    \n        try {\n          setLoadingChat(true);\n\n          const config = {\n            headers: {\n              \"Content-type\": \"application/json\",\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n\n          const { data } = await axios.post(`/api/chat`, { userId }, config);\n    \n          if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n\n          setSelectedChat(data);\n          setLoadingChat(false);\n          \n          toggleDrawer(false);\n        } catch (error) {\n\n        }\n      };\n\n    return (\n        <div>\n            <Button onClick={toggleDrawer(true)}>\n                <i class=\"fas fa-search\"></i>\n                <Typography px={2}>Search user</Typography>\n            </Button>\n\n          <Drawer\n            anchor={\"left\"}\n            open={open}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n          >\n            <Box d=\"flex\" pb={2}>\n                <Typography variant=\"h4\">Search user</Typography>\n                <input\n                placeholder=\"Type...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                >\n                </input>\n                <Button onClick={handleSearch} variant=\"ghost\"> Go </Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n          </Drawer>\n        </div>\n    )\n}\n\nexport default SlideDrawer\n"]},"metadata":{},"sourceType":"module"}