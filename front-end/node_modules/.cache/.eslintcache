[{"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/index.js":"1","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/App.js":"2","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/reportWebVitals.js":"3","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Context/ChatProvider.js":"4","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/LoginPage/LoginPage.js":"5","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/HomePage/MainPage.js":"6","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/LoginPage/RegisterPage.js":"7","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/HomePage/HomePage.js":"8","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/CustomInput.js":"9","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/RoomSelectionBar.js":"10","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SideBar.js":"11","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ui/Theme.js":"12","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ProfilePage/ProfilePage.js":"13","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/RoomPage.js":"14","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/Chatbox.js":"15","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/SlideDrawer.js":"16","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ChatSectionPage.js":"17","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/SingleChat.js":"18","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/MyChats.js":"19","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/MyRooms.js":"20","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ChatLoading.js":"21","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/AddRoomPopup.js":"22","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/MiddleSectionPage.js":"23","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/AssignmentPage.js":"24","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Config/ChatLogics.js":"25","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/UserListItem.js":"26","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ScrollableChat.js":"27","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/UpdateGroupChatModal.js":"28","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/CreateRoom.js":"29","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SuccessCreateRoom.js":"30","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/GroupChatModal.js":"31","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/JoinRoom.js":"32","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/millen/UserBadgeItem.js":"33","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/SubjectPage.js":"34","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/SubjectDetailPage.js":"35","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/MemberPage.js":"36","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SearchBar.js":"37","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/AddSubjectPopUp.js":"38","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/FilePage.js":"39","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ProfilePage/EditProdileModal.js":"40","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/AddFileModal.js":"41"},{"size":625,"mtime":1652633223000,"results":"42","hashOfConfig":"43"},{"size":508,"mtime":1652558763000,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1652369456000,"results":"45","hashOfConfig":"43"},{"size":877,"mtime":1652726573000,"results":"46","hashOfConfig":"43"},{"size":3050,"mtime":1653001548906,"results":"47","hashOfConfig":"43"},{"size":1073,"mtime":1653341385562,"results":"48","hashOfConfig":"43"},{"size":4441,"mtime":1653089656684,"results":"49","hashOfConfig":"43"},{"size":2304,"mtime":1653339065120,"results":"50","hashOfConfig":"43"},{"size":976,"mtime":1652369456000,"results":"51","hashOfConfig":"43"},{"size":0,"mtime":1652727327000,"results":"52","hashOfConfig":"43"},{"size":6789,"mtime":1653340347548,"results":"53","hashOfConfig":"43"},{"size":1711,"mtime":1652369456000,"results":"54","hashOfConfig":"43"},{"size":4182,"mtime":1653395078824,"results":"55","hashOfConfig":"43"},{"size":1775,"mtime":1653405325532,"results":"56","hashOfConfig":"43"},{"size":595,"mtime":1652983595820,"results":"57","hashOfConfig":"43"},{"size":4246,"mtime":1653404865517,"results":"58","hashOfConfig":"43"},{"size":919,"mtime":1652720722000,"results":"59","hashOfConfig":"43"},{"size":6459,"mtime":1653394621989,"results":"60","hashOfConfig":"43"},{"size":2515,"mtime":1653341836579,"results":"61","hashOfConfig":"43"},{"size":3337,"mtime":1652826164000,"results":"62","hashOfConfig":"43"},{"size":678,"mtime":1652380293000,"results":"63","hashOfConfig":"43"},{"size":3052,"mtime":1652723443000,"results":"64","hashOfConfig":"43"},{"size":3539,"mtime":1653087287959,"results":"65","hashOfConfig":"43"},{"size":381,"mtime":1652872763000,"results":"66","hashOfConfig":"43"},{"size":1832,"mtime":1653330506827,"results":"67","hashOfConfig":"43"},{"size":1083,"mtime":1652381124000,"results":"68","hashOfConfig":"43"},{"size":2399,"mtime":1653350219754,"results":"69","hashOfConfig":"43"},{"size":6593,"mtime":1652868935000,"results":"70","hashOfConfig":"43"},{"size":3900,"mtime":1652724323000,"results":"71","hashOfConfig":"43"},{"size":903,"mtime":1652369456000,"results":"72","hashOfConfig":"43"},{"size":4550,"mtime":1652727527000,"results":"73","hashOfConfig":"43"},{"size":651,"mtime":1652369456000,"results":"74","hashOfConfig":"43"},{"size":579,"mtime":1652721853000,"results":"75","hashOfConfig":"43"},{"size":4054,"mtime":1653406592977,"results":"76","hashOfConfig":"43"},{"size":7964,"mtime":1653413025811,"results":"77","hashOfConfig":"43"},{"size":4810,"mtime":1653411110313,"results":"78","hashOfConfig":"43"},{"size":822,"mtime":1652883588493,"results":"79","hashOfConfig":"43"},{"size":4329,"mtime":1653395587607,"results":"80","hashOfConfig":"43"},{"size":1735,"mtime":1653401482884,"results":"81","hashOfConfig":"43"},{"size":4285,"mtime":1653394907339,"results":"82","hashOfConfig":"43"},{"size":5501,"mtime":1653409924352,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},"4ug2v6",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"88"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"88"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"88"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"88"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"88"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"88"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"88"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"88"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"88"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"88"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"88"},"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/index.js",["239"],[],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ChatProvider from './Context/ChatProvider';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  \n  <ChatProvider>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ChatProvider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["240","241"],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/App.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/reportWebVitals.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Context/ChatProvider.js",["242"],[],"import { createContext, useContext, useEffect, useState} from 'react'\nimport {useNavigate} from 'react-router-dom'\n\n\nconst ChatContext = createContext()\n\nconst ChatProvider = ({ children}) => {\n\n    const [user,setUser] = useState();\n    const [selectedChat, setSelectedChat] = useState();\n    const [chats, setChats] = useState([]);\n    const [rooms, setRooms] = useState([]);\n\n    // const navigate = useNavigate();\n\n    useEffect(() => {\n        const userInfo = JSON.parse(localStorage.getItem(\"userinfo\"))\n        setUser(userInfo)\n\n        // if(!userInfo){\n        //     navigate('/');\n        // }\n    }, [])\n\n\n    return <ChatContext.Provider value={{ user, setUser, selectedChat, setSelectedChat, chats, setChats, rooms, setRooms}}>{children}</ChatContext.Provider>\n}\n\nexport const ChatState = () =>{\n    return useContext(ChatContext)\n}\n\nexport default ChatProvider","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/LoginPage/LoginPage.js",["243","244","245","246","247","248","249","250"],[],"import Grid from \"@mui/material/Grid\";\nimport Logo from \"../img/full-logo.png\";\nimport Box from \"@mui/material/Box\";\nimport axios from \"axios\"\nimport \"./LoginPage.css\";\nimport theme from \"../ui/Theme\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport {useState} from 'react'\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport CustomInput from \"../Components/CustomInput\";\nimport { maxWidth, width } from \"@mui/system\";\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  const [chats,setChats] = useState([])\n  const [open, setOpen] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [email, setEmail] = useState()\n  const [password,setPassword] = useState()\n\n  const handleRouteSignUp = () => {\n    navigate(\"/signup\");\n  }\n\n  const handleRouteHome = async() => {\n    setLoading(true)\n        if (!email || !password){\n          console.log(\"please fill in\")\n          setLoading(false)\n          return\n        }\n        try{\n          const config = {\n            headers: {\n              \"Content-type\": \"application/json\"\n            }\n          }\n          const {data} = await axios.post(\"/api/user/login\",{email,password},config)\n          localStorage.setItem(\"userinfo\",JSON.stringify(data))\n          setLoading(false)\n          navigate(\"/main/home\");\n        } catch{\n          console.log(\"error\")\n\n        }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box class=\"background-login\">\n        <Grid container justifyContent=\"center\" alignItems=\"center\" direction=\"column\" style={{ minHeight: \"60vh\" }}>\n          <Grid item>\n            <Box sx={{ backgroundColor: \"secondary.main\", padding: \"0px 3rem\" }}>\n              <Grid item>\n                <img class=\"logo\" src={Logo} alt=\"brand logo\" />\n              </Grid>\n              <Grid container direction=\"column\" alignItems=\"center\" justifyItems=\"center\">\n                <CustomInput placeholder=\"Email or username\" value={email} type=\"text\" onChange={(e)=> setEmail(e.target.value)} />\n                <CustomInput placeholder=\"Password\" value={password} type=\"password\" onChange={(e)=> setPassword(e.target.value)}/>\n                <Button onClick={handleRouteHome} size=\"medium\" variant=\"contained\" style={{ width: \"105%\", marginTop: \"0.5rem\", marginBottom: \"2rem\" }}> Log in </Button>\n              </Grid>\n            </Box>\n          </Grid>\n          <Grid item marginTop=\"1rem\">\n            <Box sx={{ backgroundColor: \"secondary.main\", padding: \"1rem 5.2rem\" }} textAlign=\"center\">\n              <Grid item>\n                <Typography variant=\"h3\" fontSize=\"1rem\">Don't have an account?</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h3\" fontSize=\"1rem\"  color=\"primary.main\" sx = {{cursor:\"pointer\"}} onClick={handleRouteSignUp}>Sign Up</Typography>\n              </Grid>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default LoginPage;\n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/HomePage/MainPage.js",["251","252"],[],"import \"../Components/RoomSelectionBar\";\nimport Grid from \"@mui/material/Grid\";\nimport theme from \"../ui/Theme\";\nimport {ThemeProvider} from '@mui/material/styles';\nimport { BrowserRouter as Router,Routes, Route, useNavigate } from \"react-router-dom\";\n\nimport SideBar from \"../Components/SideBar\";\nimport RoomPage from \"../RoomPage/RoomPage\";\nimport HomePage from \"../HomePage/HomePage\"\nimport ProfilePage from \"../ProfilePage/ProfilePage\";\n\nfunction MainPage() {\n\n  const navigate = useNavigate();\n\n    return (\n        <ThemeProvider theme={theme}>\n        <Grid container direction=\"row\">\n          <Grid item xs={0.6} sx={{bgcolor:'primary.dark', height:\"100vh\"}}>\n          <SideBar/>\n          </Grid>\n          <Grid item xs={11.4}>\n          <Routes>\n              <Route path=\"room/*\" element={<RoomPage/>}></Route>\n              <Route path=\"home\" element={<HomePage/>}></Route>\n              <Route path=\"profile\" element={<ProfilePage/>}></Route>\n            </Routes>\n          </Grid>\n        </Grid>\n        </ThemeProvider>\n    )\n}\n\nexport default MainPage;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/LoginPage/RegisterPage.js",["253","254","255"],[],"import Grid from \"@mui/material/Grid\";\nimport Logo from \"../img/full-logo.png\";\nimport Box from \"@mui/material/Box\";\nimport axios from 'axios'\n\n\nimport \"./LoginPage.css\";\nimport theme from \"../ui/Theme\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { Typography, Button , Alert} from \"@mui/material\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport { useState } from \"react\";\n\nimport CustomInput from \"../Components/CustomInput\";\n\nexport default function Register() {\n\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  \n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [pic,setPic] = useState();\n  const [loading,setLoading] = useState(false)\n\n  const navigate = useNavigate();\n\n  const handleBack = () => {\n    navigate(\"/\");\n  }\n\n  const onSignUp = async() => {\n    \n    setLoading(true)\n    if(!name || !email || !password || !confirmPassword){\n      console.log(\"please fill all blanks\")\n      setLoading(false)\n      return\n    }\n    if(password != confirmPassword){\n      console.log(\"password must match\")\n      return\n    }\n\n    try{\n      const config ={\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      }\n      const {data} = await axios.post(\"/api/user\",{name,email,password,pic},config)\n      console.log(\"login success\")\n      localStorage.setItem(\"userinfo\", JSON.stringify(data))\n      handleBack()\n    }catch(err){\n      setLoading(false)\n\n    }\n  }\n  const postDetails = async (pics) =>{\n    setLoading(true)\n    if(pics === undefined){\n      <Alert variant=\"outlined\" severity=\"error\">\n        This is an error alert — check it out!</Alert>\n        return\n    }\n    if(pics.type === \"image/jpeg\" || \"image/png\"){\n      const data = new FormData()\n      data.append(\"file\", pics)\n      data.append(\"upload_preset\", \"Classmate\")\n      data.append(\"cloud_name\", \"dp1xewsqt\")\n      fetch(\"http://api.cloudinary.com/v1_1/dp1xewsqt/image/upload\", {\n        method:\"post\",\n        body: data,\n      })\n      .then((res) => res.json())\n      .then((data) => {\n        setPic(data.url.toString())\n        console.log(data.url.toString())\n        setLoading(false)\n      })\n      .catch((err) => {\n        console.log(err)\n        setLoading(false)\n      })\n    } else{\n      <Alert variant=\"outlined\" severity=\"error\">\n      This is an error alert — check it out!</Alert>\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box class=\"background-login\">\n        <Grid container justifyContent=\"center\" alignItems=\"center\" direction=\"column\" style={{ minHeight: \"70vh\" }}>\n          <Grid item>\n            <Box sx={{ backgroundColor: \"secondary.main\", padding: \"0px 3rem\" }}>\n              <Grid item>\n                <img class=\"logo\" src={Logo} alt=\"brand logo\" />\n              </Grid>\n              <Grid container direction=\"column\" alignItems=\"center\" justifyItems=\"center\">\n                <CustomInput placeholder=\"Email\" onChange={(e) => { setEmail(e.target.value); }} />\n                <CustomInput placeholder=\"Full Name\" onChange={(e) => { setName(e.target.value); }} />\n                <CustomInput placeholder=\"Password\" onChange={(e) => { setPassword(e.target.value); }} />\n                <CustomInput placeholder=\"Confirm Password\" onChange={(e) => { setConfirmPassword(e.target.value); }} />\n                {/* <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={ (e) => \n                        postDetails(e.target.files[0])\n                      }\n                    /> */}\n                <Button size=\"medium\" variant=\"contained\" style={{ width: \"105%\", marginTop: \"0.5rem\", marginBottom: \"2rem\" }} onClick={onSignUp}> Register </Button>\n              </Grid>\n            </Box>\n          </Grid>\n          <Grid item marginTop=\"1rem\">\n            <Box sx={{ backgroundColor: \"secondary.main\", padding: \"1rem 4.8rem\" }} textAlign=\"center\">\n              <Grid item>\n                <Typography variant=\"h3\" fontSize=\"1rem\">Already have an account?</Typography>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h3\" fontSize=\"1rem\" color=\"primary.main\" sx={{ cursor: \"pointer\" }} onClick={handleBack}>Log in</Typography>\n              </Grid>\n            </Box>\n          </Grid>\n        </Grid>\n\n      </Box>\n    </ThemeProvider>\n  );\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/HomePage/HomePage.js",["256","257","258","259","260","261"],[],"import { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport {Box, Grid, Stack, Typography, Divider, Avatar} from \"@mui/material\";\nimport { BrowserRouter as Router,Routes, Route } from \"react-router-dom\";\nimport { ChatState } from \"../Context/ChatProvider\"\nimport SlideDrawer from \"../ChatPage/SlideDrawer\";\nimport MyChats from '../ChatPage/MyChats';\nimport SingleChat from '../ChatPage/SingleChat'\nimport Chatbox from '../ChatPage/Chatbox'\nimport { useState} from 'react'\n\nimport \"../ChatPage/ChatSectionPage\"\n\n\nfunction HomePage(props){\n\n    const [fetchAgain, setFetchAgain] = useState(false);\n    const {user} = ChatState();\n\n    const [resetDM, setResetDM] = useState(false);\n    \n    return(\n        <ThemeProvider theme={theme}>\n            <Box sx={{bgcolor:\"primary.main\", width:\"100%\", height:\"100%\", overflow:\"auto\"}}>\n            <Box textAlign=\"center\" marginTop=\"2%\">\n                <Typography variant=\"h1\" fontSize=\"2rem\" color=\"secondary.main\">CLASSMATE</Typography>\n            </Box>\n            <Box sx={{bgcolor:\"#DBE2EF\", width:\"95%\", marginLeft:\"2%\", height:\"80%\", borderRadius:\"2px\"}}>\n            <Grid container>\n                <Grid item xs=\"3\" sx={{borderRight:\"2px solid #3f72af\", height:\"80vh\"}}>\n                    <Stack textAlign=\"center\">\n                    <Typography variant=\"h2\" fontSize=\"1.5rem\" color=\"primary.dark\" sx={{margin:\"2% 0%\"}}>Direct Messages</Typography>\n                    <Divider/>\n                <Stack padding=\"2%\">\n                {user && <SlideDrawer/>}\n                {user && <MyChats/>}\n\n            {/* <Box sx={{ backgroundColor:\"primary.main\", alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\", cursor: 'pointer' }}>\n              <Avatar sx={{marginRight:\"2%\"}}>SP</Avatar>\n              <Typography variant='subtitles' fontSize=\"1rem\" color=\"secondary.main\">Pure</Typography>\n            </Box> */}\n                </Stack>\n\n                    </Stack>\n                </Grid>\n                <Grid item xs=\"9\" padding=\"0%\">\n                {user && <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} resetDM={resetDM}/>}\n                    </Grid>\n            </Grid>\n\n            </Box>\n            </Box>\n        </ThemeProvider>\n    );\n}\n\nexport default HomePage;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/CustomInput.js",["262"],[],"import { styled } from '@mui/system';\n\nconst blue = {\n  100: '#DAECFF',\n  200: '#80BFFF',\n  400: '#3399FF',\n  600: '#0072E5',\n};\n\nconst grey = {\n  50: '#F3F6F9',\n  100: '#E7EBF0',\n  200: '#E0E3E7',\n  300: '#CDD2D7',\n  400: '#B2BAC2',\n  500: '#A0AAB4',\n  600: '#6F7E8C',\n  700: '#3E5060',\n  800: '#2D3843',\n  900: '#1A2027',\n};\n\nconst StyledInputElement = styled('input')(\n  ({ theme }) => `\n  font-size: 0.875rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: ${grey[900]};\n  background: ${theme.palette.mode === 'dark' ? grey[900] : grey[50]};\n  border: 1px solid ${theme.palette.mode === 'dark' ? grey[800] : grey[300]};\n  border-radius: 2px;\n  padding: 6px 6px;\n  margin-bottom: 0.5em;\n  width : 100%;\n//   &:hover {\n//     background: ${theme.palette.mode === 'dark' ? null : grey[100]};\n//     border-color: ${theme.palette.mode === 'dark' ? grey[700] : grey[400]};\n//   }\n\n  &:focus {\n    outline: 1px solid ${grey[600]};\n  }\n`,\n);\n\nexport default StyledInputElement;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/RoomSelectionBar.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SideBar.js",["263","264","265","266","267","268","269","270","271","272","273","274","275"],[],"import { Stack, Avatar, Box, Divider, Typography } from '@mui/material';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from '@emotion/styled';\n\nimport React, { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { AddRoomPopup } from './AddRoomPopup';\nimport MyRooms from './MyRooms'\nimport {ChatState} from \"../Context/ChatProvider\"\n\nimport List from \"@mui/material/List\";\nimport ChatLoading from \"../ChatPage/ChatLoading\"\nimport {getSender} from \"../Config/ChatLogics\"\nimport CircularProgress from '@mui/material/CircularProgress';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport axios from \"axios\";\n\nimport Tooltip, { tooltipClasses } from '@mui/material/Tooltip';\n\n\nconst HtmlTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: '#f5f5f9',\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(20),\n    border: '1px solid #dadde9',\n  },\n}));\n\nconst CustomSideBarItem = styled(Avatar)(() => ({\n    margin: \"5% 0%\",\n    \":hover\" : {\n        backgroundColor : 'red',\n        color : 'black',\n        position : 'relative'\n    },\n    cursor: 'pointer',\n    \n  }));\n  \n  function stringToColor(string) {\n    let hash = 0;\n    let i;\n  \n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n  \n    let color = '#';\n  \n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    /* eslint-enable no-bitwise */\n  \n    return color;\n  }\n  \n  \n  function splitString(name) {\n    let lstString = name.split(\" \")\n    let result = \"\"\n    for (let i = 0; i < lstString.length; i++) {\n        result += lstString[i][0]\n    }\n    result = result.slice(0, 3).toUpperCase()\n    return result\n}\n\nexport default function SideBar(){ \n\n    const [open, setOpen] = React.useState(false);\n\n    const [loggedUser, setLoggedUser] = useState();\n    const { selectedChat, setSelectedChat, user, chats, setChats} = ChatState();\n    const [loading, setLoading] = useState(true);\n\n    const [resetDM, setResetDM] = useState(false);\n\n      useEffect(() => {\n        setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n        // fetchChats();\n      }, []);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n    return (\n      <div>\n        <Stack alignItems=\"center\">\n            <Box>\n            <Divider/>\n            <HtmlTooltip placement=\"right\" title={\n              <React.Fragment>\n                <Typography color=\"primary.dark\">Home</Typography>\n              </React.Fragment>\n            }>\n            <CustomSideBarItem component={Link} to=\"home\">\n               <HomeIcon />\n            </CustomSideBarItem>\n            </HtmlTooltip>\n            </Box>\n            <Divider sx={{width:'70%', backgroundColor:\"white\", margin:\"5% 0%\"}}/>\n            {chats ? (\n                          <Stack spacing={1}>\n                              {chats.map((chat) => (\n                                <HtmlTooltip placement=\"right\"\n                                title={\n                                  <React.Fragment>\n                                    <Typography color=\"primary.dark\">{chat.chatName}</Typography>\n                                    <Box sx={{alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\"}}>\n              <PeopleIcon sx={{color:\"primary.dark\"}}/>\n              <Typography color=\"primary.dark\" variant='h2' fontSize=\"1rem\">{chat.users.length}</Typography>\n            </Box>\n                                  </React.Fragment>\n                                }>\n                                <CustomSideBarItem\n                                    onClick={() => setSelectedChat(chat)}\n                                    key={chat._id}\n                                    sx = {{fontSize:\"1rem\",display: chat.isGroupChat ? chat.chatName: \"none\", bgcolor: stringToColor(chat.chatName), color:\"black\", textDecoration:\"none\"}}\n                                    component={Link} to=\"room/chat\" variant='rounded'\n                                    >\n                                      {splitString(chat.chatName)}\n                                    \n                                    {/* <Avatar\n                                    sx={{marginRight:\"2%\"}}\n                                    size=\"sm\"\n                                    cursor=\"pointer\"\n                                    src={chats.pic} */}\n                                    \n                                    {/* /> */}\n                                        {/* <Typography>\n                                            {!chat.isGroupChat \n                                            ? getSender(loggedUser, chat.users)\n                                            :chat.chatName}\n                                            \n                                        </Typography>\n                                         */}\n                                    </CustomSideBarItem>\n                                </HtmlTooltip>\n                                 \n                                ))}\n                          </Stack>\n                               \n                        ) : (\n                            <ChatLoading/>\n                        )}\n            {/* <CustomSideBarItem component={Link} to=\"room\" variant='rounded'>\n                SE\n            </CustomSideBarItem>\n            <MyRooms/> */}\n            <HtmlTooltip placement=\"right\" title={\n              <React.Fragment>\n                <Typography color=\"primary.dark\">Add Room</Typography>\n              </React.Fragment>\n            }>\n            <CustomSideBarItem onClick={handleClickOpen} >\n               <AddIcon/>\n            </CustomSideBarItem>\n            </HtmlTooltip>\n\n            <HtmlTooltip placement=\"right\" title={\n              <React.Fragment>\n                <Typography color=\"primary.dark\">My Profile</Typography>\n              </React.Fragment>\n            }>\n            <Avatar \n            component={Link} to=\"profile\" \n            sx={{position:\"fixed\", bottom:\"0\", \n            marginBottom:\"1rem\"}}\n            // src={user.pic ? user.pic : \"\"}\n            \n            cursor=\"pointer\"\n            \n            />\n            </HtmlTooltip>\n        </Stack>\n        <AddRoomPopup open={open} onClose={handleClose} />\n      </div>\n    )\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ui/Theme.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ProfilePage/ProfilePage.js",["276","277","278","279","280","281"],[],"import { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport {Box, Grid, Stack, Typography, Divider, Avatar, Button, Modal, IconButton} from \"@mui/material\";\nimport { ChatState } from \"../Context/ChatProvider\"\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport EditIcon from '@mui/icons-material/Edit';\nimport React from \"react\"\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\n\nimport EditProfileModal from \"./EditProdileModal\"\n\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ProfilePage(){\n    const { user } = ChatState();\n    console.log(user);\n\n    const navigate = useNavigate();\n\n    const handleRouteLogOut = () => {\n        localStorage.removeItem(\"userinfo\");\n        navigate(\"/\");\n      }\n      \n    return(\n        <ThemeProvider theme={theme}>\n            <Box sx={{bgcolor:\"primary.main\", width:\"100%\", height:\"100%\", overflow:\"auto\"}}>\n            <Box textAlign=\"center\" marginTop=\"2%\">\n            <Typography variant=\"h1\" fontSize=\"2rem\" color=\"secondary.main\">My Profile</Typography>\n            </Box>\n            <Box sx={{ width:\"95%\", marginLeft:\"2%\"}}>\n            <Box sx={{bgcolor:\"#DBE2EF\", borderRadius:\"2px\"}}>\n                <Stack>\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                    <Avatar sx={{width:\"5rem\", height:\"5rem\", margin:\"3%\"}} src={user.pic}/> \n                    </Box>\n                <Box padding=\"2%\">\n                <Typography variant=\"h1\" fontSize=\"0.5rem\" color=\"primary.dark\">Full Name :</Typography>\n    <Typography variant=\"h3\" fontSize=\"1rem\" color=\"primary.main\" marginBottom=\"0.5%\">{user.name}</Typography>\n\n                {/* <Typography variant=\"h1\" fontSize=\"0.5rem\" color=\"primary.dark\">Username :</Typography> */}\n                <Typography variant=\"h1\" fontSize=\"0.5rem\" color=\"primary.dark\">Email :</Typography>\n    <Typography variant=\"h3\" fontSize=\"1rem\" color=\"primary.main\" marginBottom=\"0.5%\">{user.email}</Typography>\n                {/* <Typography variant=\"h1\" fontSize=\"0.5rem\" color=\"primary.dark\">Phone number :</Typography>\n                <Typography variant=\"h3\" fontSize=\"1rem\" color=\"primary.main\" marginBottom=\"0.5%\">0881111111</Typography> */}\n                </Box>\n                </Stack>\n            \n            </Box>\n            <Stack direction=\"column\" marginTop=\"1%\">\n            {/* <Button style={{backgroundColor:\"grey\"}}variant=\"contained\" startIcon={<EditIcon/>}>\n                Edit Profile\n            </Button> */}\n            <EditProfileModal variant=\"contained\" sx={{marginTop:\"1%\"}} user={user}/>\n            <Button onClick={handleRouteLogOut} style={{backgroundColor:\"red\"}} variant=\"contained\" sx={{marginTop:\"1%\"}} startIcon={<LogoutIcon/>}>\n                Log Out\n            </Button>\n            </Stack>\n            </Box>\n            </Box>\n        </ThemeProvider>\n    );\n}\n\n// const ProfilePage = ({ user, children }) => {\n//     const style = {\n//         position: 'absolute',\n//         top: '50%',\n//         left: '50%',\n//         transform: 'translate(-50%, -50%)',\n//         width: 400,\n//         bgcolor: 'background.paper',\n//         border: '2px solid #000',\n//         boxShadow: 24,\n//         p: 4,\n//       };\n\n    \n\n//     const [open, setOpen] = React.useState(false);\n//     const handleOpen = () => setOpen(true);\n//     const handleClose = () => setOpen(false);\n\n//     return <>\n\n//     { children ? ( <span onClick={handleOpen}>{children}</span>\n//     ) : (\n//         <Button arialable=\"profile\" onClick={handleOpen}>\n//             <AccountCircleIcon/>\n//         </Button>\n//     )}\n//     <Modal\n//   open={open}\n//   onClose={handleClose}\n//   aria-labelledby=\"modal-modal-title\"\n//   aria-describedby=\"modal-modal-description\"\n// >\n//   <Box sx={style}>\n//     <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n//       Text in a modal\n//     </Typography>\n//     <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n//       Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n//     </Typography>\n//   </Box>\n// </Modal>\n        \n//     </>\n    \n// }\n\nexport default ProfilePage;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/RoomPage.js",["282","283","284","285","286"],[],"import Grid from \"@mui/material/Grid\";\nimport MiddleSectionPage from \"./MiddleSectionPage\";\nimport { BrowserRouter as Router,Routes, Route } from \"react-router-dom\";\nimport ChatSectionPage from '../ChatPage/ChatSectionPage';\nimport SingleChat from \"../ChatPage/SingleChat\";\nimport { Box, Typography } from \"@mui/material\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport SubjectPage from \"../SubjectPage/SubjectPage\";\nimport MemberPage from \"../RoomPage/MemberPage\";\nimport SubjectDetailPage from \"../SubjectPage/SubjectDetailPage\";\nimport FilePage from \"../SubjectPage/FilePage\"\n\nfunction RoomPage(){\n  const { selectedChat} = ChatState();\n  \n    return (\n        <Grid container direction=\"row\">\n        <Grid item xs={3} sx={{bgcolor:'primary.main', height:\"100vh\"}}>\n              <MiddleSectionPage/>\n          </Grid>\n          <Grid items xs={9} sx={{bgcolor:'secondary.main', height:\"100vh\"}}>\n            {/* <Box \n                  d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n                  alignItems=\"center\"\n                  flexDir=\"column\"\n                  p={3}\n                  bg=\"white\"\n                  height=\"100%\"\n                  w={{ base: \"100%\", md: \"68%\" }}\n                  borderRadius=\"lg\"\n                  borderWidth=\"1px\">  \n            </Box> */}\n          <Routes>\n              <Route path=\"chat\" element={<SingleChat/>}></Route>\n              <Route path=\"subject\" element={<SubjectPage/>}></Route>\n              <Route path=\"member\" element={<MemberPage/>}></Route>\n              <Route path=\"subject/:id\" element={<SubjectDetailPage />} />\n              <Route path=\"subject/:id/file\" element={<FilePage/>} />\n            </Routes>\n          </Grid>\n        </Grid>\n    )\n}\n\nexport default RoomPage;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/Chatbox.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/SlideDrawer.js",["287","288","289"],[],"import React from 'react'\nimport {useState} from 'react'\nimport Button from \"@mui/material/Button\"\nimport { Typography, Drawer, Input,FormControl, IconButton } from '@mui/material'\nimport Box from \"@mui/material/Box\";\nimport { ChatState} from \"../Context/ChatProvider\"\nimport ChatLoading from \"./ChatLoading\"\nimport UserListItem from \"./UserListItem\"\nimport axios from 'axios'\n\nimport SearchIcon from '@mui/icons-material/Search';\n\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\n\n\n\n const SlideDrawer = () => {\n    const [search, setSearch] = useState(\"\")\n    const [searchResult, setSearchResult] = useState([])\n    const [open, setOpen] = useState(false)\n    const [loading,setLoading] = useState(false)\n    const [loadingChat, setLoadingChat] = useState();\n    const handleClose = () => setOpen(false)\n\n    const { user, setSelectedChat, chats, setChats} = ChatState();\n    const toggleDrawer = (newOpen) => (event) => {\n        setOpen(newOpen)\n    }\n\n    const handleSearch = async() => {\n        if(!search){\n            console.log(\"error no search entered\")\n        }\n\n        try{\n\n            const config = {\n                headers: {\n                    \n                    Authorization: `Bearer ${user.token}`,\n                }\n            };\n            const { data} = await axios.get(`/api/user?search=${search}`, config)\n            \n\n            setLoading(false);\n            setSearchResult(data);\n\n        }catch (error){\n            console.log(\"error can't fetch data\");\n        }\n    }\n\n    const accessChat = async (userId) => {\n        console.log(userId);\n    \n        try {\n          setLoadingChat(true);\n\n          const config = {\n            headers: {\n              \"Content-type\": \"application/json\",\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n\n          const { data } = await axios.post(`/api/chat`, { userId }, config);\n    \n          if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n\n          setSelectedChat(data);\n          setLoadingChat(false);\n          \n          handleClose(false);\n        } catch (error) {\n\n        }\n      };\n\n    return (\n      <ThemeProvider theme={theme}>\n  <div>\n            <Button onClick={toggleDrawer(true)} sx={{backgroundColor:\"primary.main\", marginBottom:\"2%\"}}>\n                {/* <i class=\"fas fa-search\"></i> */}\n                <Typography variant=\"h2\" fontSize=\"1.25em\" color=\"secondary.main\" px={2}>Start a conversation</Typography>\n            </Button>\n\n          <Drawer\n            anchor={\"left\"}\n            open={open}\n            onClose={toggleDrawer(false)}\n            onOpen={toggleDrawer(true)}\n            sx={{width:\"1000px\"}}\n          >\n            {/* <Box d=\"flex\" pb={2}>\n                <Typography variant=\"h5\">Search user</Typography>\n                <input\n                placeholder=\"Type...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                >\n                </input>\n                <Button onClick={handleSearch} variant=\"ghost\"> Go </Button>\n            </Box> */}\n            <Box sx={{width:\"100%\"}}>\n            <Box sx={{\n                backgroundColor: \"#979797\",display: \"flex\",borderRadius: \"8px\"\n            }}> \n            <FormControl onKeyDown={handleSearch} isRequire>\n            <Input\n                    placeholder=\"Who would you like to communicate ?\"\n                    onChange={(e) => setSearch(e.target.value)}\n                    value={search}\n                    style={{flexGrow:\"1\", padding:\"0 15px\", backgroundColor:\"transparent\",border:\"none\",outline:\"none\"}}\n                    disableUnderline=\"true\"\n                    fullWidth\n                />\n            </FormControl>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            </Box>\n\n          </Drawer>\n        </div>\n      </ThemeProvider>\n      \n    )\n}\n\nexport default SlideDrawer\n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ChatSectionPage.js",["290"],[],"import {Box, TextField, Button, InputAdornment, IconButton} from \"@mui/material\";\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport SendIcon from '@mui/icons-material/Send';\n\nexport default function ChatSectionPage(){\n  return (\n    <ThemeProvider theme={theme}>\n      <Box sx={{backgroundColor:\"secondary.main\", position:'relative', height:'100vh', overflow:\"auto\"}}>\n      <Box sx={{width:\"100%\",position: \"absolute\", bottom: \"0.1rem\",justifyContent:\"center\"}}>\n      <form noValidate autoComplete=\"off\">\n         <TextField label=\"Say something\" fullWidth \n            InputProps={{ endAdornment:(<InputAdornment position=\"end\">\n                <IconButton>\n                </IconButton>\n                <SendIcon sx={{cursor:'pointer', color:\"primary.main\"}}/>\n              </InputAdornment>)}}></TextField>\n      </form>\n      </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/SingleChat.js",["291","292","293","294","295","296","297","298","299","300"],[],"import React, { useEffect, useLayoutEffect } from 'react'\nimport { ChatState } from '../Context/ChatProvider'\nimport Box from '@mui/material/Box'\nimport { Typography, FormControl, Input } from '@mui/material';\nimport {getSender} from \"../Config/ChatLogics\"\nimport UpdateGroupChatModal from './UpdateGroupChatModal';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport {useState} from 'react'\nimport axios from 'axios'\nimport ScrollableChat from './ScrollableChat'\n\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\nimport IconButton from '@mui/material/IconButton';\nimport SendIcon from '@mui/icons-material/Send';\n\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport io from 'socket.io-client'\n\nconst ENDPOINT = \"http://localhost:5000\"\nvar socket, selectedChatCompare\n\nconst SingleChat = ({fetchAgain, setFetchAgain}) => {\n\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [newMessage, setNewMessage] = useState();\n    const [socketConnected, setSocketConnected] = useState(false)\n    const [typing, setTyping] = useState(false);\n    const [istyping, setIsTyping] = useState(false);\n\n    const { user, selectedChat, setSelectedChat} = ChatState();\n\n    const [reset,setReset] = useState(false)\n\n    const fetchMessages = async () => {\n        if (!selectedChat) return;\n\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n\n          setLoading(true);\n\n          const { data } = await axios.get(\n            `/api/message/${selectedChat._id}`,\n            config\n          );\n\n          setMessages(data);\n          setLoading(false);\n          socket.emit(\"join chat\", selectedChat._id)\n\n\n        } catch (error) {\n\n        }\n      };\n\n    const sendMessage = async(event) => {\n        if(event.key===\"Enter\" && newMessage){\n            try {\n                const config = {\n                    headers: {\n                        \"Content-Type\":\"application/json\",\n                        Authorization: `Bearer ${user.token}`,\n                    }\n                }\n                setNewMessage(\"\");\n                const { data } = await axios.post('/api/message', {\n                    content: newMessage,\n                    chatId: selectedChat._id\n                },\n                config\n\n                )\n                socket.emit(\"new message\", data)\n\n                setMessages([...messages, data]);\n            } catch (error) {\n                console.log(error)\n            }\n        }}\n    const typingHandler = (e) => {\n        setNewMessage(e.target.value)\n    }\n\n    useEffect(()=>{\n        socket = io(ENDPOINT)\n        socket.emit(\"setup\", user)\n        socket.on(\"connected\", ()=> setSocketConnected(true))\n    })\n\n    useEffect(() => {\n        fetchMessages();\n        selectedChatCompare = selectedChat\n    }, [selectedChat])\n\n    useEffect(() => {\n        socket.on(\"message recieved\", (newMessageRecieved) => {\n          if (\n            !selectedChatCompare || // if chat is not selected or doesn't match current chat\n            selectedChatCompare._id !== newMessageRecieved.chat._id\n          ) {\n            // if (!notification.includes(newMessageRecieved)) {\n            //     setNotification([newMessageRecieved, ...notification]);\n            //     setFetchAgain(!fetchAgain);\n            //   }\n          } else {\n            setMessages([...messages, newMessageRecieved]);\n          }\n        });\n      });\n\n    return (\n        <ThemeProvider theme={theme}>\n <div style={{flexGrow:\"1\", maxWidth:\"100%\"}}>\n        {selectedChat ? (\n            <>\n        <Box paddingBottom=\"15px\" sx={{borderBottom:\"1px solid #112D4E\"}}>\n        <Box display=\"flex\" sx={{alignItems:\"center\", color:\"primary.main\"}}>\n        <ChatBubbleIcon/>\n        <Typography\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        w=\"100%\"\n        alignItems=\"center\"\n      >\n          {!selectedChat.isGroupChat ? (\n              <>\n                {getSender(user,selectedChat.users)}\n                {/* profilemodal */}\n              </>\n          ) : (\n              <>\n              {selectedChat.chatName.toUpperCase()}\n              </>\n          )}\n      </Typography>\n        </Box>\n        </Box>\n\n          \n        <Box \n        sx={{\n        d:\"flex\",\n        flexDir:\"column\",\n        justifyContent:\"flex-end\",\n        backgroundColor:\"secondary.main\",\n        w:\"100%\",\n        h:\"100%\",\n        overflowY:\"hidden\",\n        }}\n        >\n        {loading ? (\n            <div style={{height:'500px',display: 'flex', justifyContent: 'center', marginTop:\"50%\"}}>\n                <CircularProgress/>\n            </div>\n            ):(\n            <div className=\"messages\" style={{overflow:\"auto\", height: selectedChat.isGroupChat ? '85vh' : \"60vh\"}}>\n                <ScrollableChat messages={messages}/>\n            </div>\n            )}\n            <Box sx={{\n                backgroundColor: \"#fff\",display: \"flex\", justifyContent: \"space-between\",padding: \"10px\",borderRadius: \"8px\"\n            }}>\n            <FormControl onKeyDown={sendMessage} isRequire>\n                {istyping ? <div>Loading...</div> : <></>}\n                <Input\n                    placeholder=\"Enter a message..\"\n                    onChange={typingHandler}\n                    value={newMessage}\n                    style={{flexGrow:\"1\", padding:\"0 15px\", backgroundColor:\"transparent\",border:\"none\",outline:\"none\"}}\n                    disableUnderline=\"true\"\n                />\n            </FormControl>\n            <IconButton onClick={sendMessage} sx={{\n                    width:\"36px\", height:\"36px\", backgroundColor:\"primary.main\",color:\"secondary.main\", cursor:\"pointer\"\n                    ,borderRadius:\"5px\", lineHeight:\"36px\",\n                    transition:\"all 0.3s cubic-bezier(0.88, 0.19, 0.37, 1.11)\"\n                }}>\n                <SendIcon/>\n                </IconButton>\n            </Box>\n          </Box>\n            </>\n        ) : (\n            //No DM\n            <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\" >\n                <Typography fontFamily=\"Work sans\" fontSize=\"20px\" j>\n                    Click on a user to start chatting\n                </Typography>\n            </Box>\n        )}\n    </div>\n        </ThemeProvider>\n    )\n}\n\nexport default SingleChat;\n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/MyChats.js",["301","302","303","304","305"],[],"import React, { useState, useEffect} from 'react'\nimport {ChatState} from \"../Context/ChatProvider\"\nimport axios from \"axios\";\nimport {Paper, Typography, Avatar} from \"@mui/material\"\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ChatLoading from \"./ChatLoading\"\nimport {getSender, getProfilePic} from \"../Config/ChatLogics\"\nimport Button from '@mui/material/Button'\nimport Stack from \"@mui/material/Stack\"\nimport CircularProgress from '@mui/material/CircularProgress';\n\n const MyChats = () => {\n    const [loggedUser, setLoggedUser] = useState();\n    const { selectedChat, setSelectedChat, user, chats, setChats} = ChatState();\n    const [loading, setLoading] = useState(true);\n\n    const fetchChats = async () => {\n      if (!user._id) {\n        console.log(\"cant find _id\");\n        return;\n      }\n        // console.log(user._id);\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n              \n            },\n          };\n          \n          const { data } = await axios.get(\"/api/chat\", config);\n\n          for (let i = 0; i < data.length; i++){\n              if (data[i].isGroupChat === true){\n                console.log(\"inder\"+i)\n                setChats(data);\n              }\n          }\n          setLoading(false)\n        } catch (error) {\n          console.log(error)\n        }\n      };\n\n      useEffect(() => {\n        setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n        fetchChats();\n      }, []);\n\n    return (\n      <div>\n      {\n        loading ? <CircularProgress/>\n        :\n        <Box>\n        { chats ? (\n          <List style={{maxHeight:\"65vh\", overflow:\"auto\"}}>\n            {chats?.map((chat) => (\n             <Box sx={{ backgroundColor : selectedChat===chat ? \"primary.dark\": \"primary.main\", alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\", cursor: 'pointer',display: chat.isGroupChat ? \"none\": chat.chatName, marginBottom:\"2%\" }} onClick={()=> setSelectedChat(chat)}>\n       <Avatar sx={{marginRight:\"2%\"}} src={getProfilePic(loggedUser, chat.users)}></Avatar>\n       <Typography variant='h2' fontSize=\"1rem\" color=\"secondary.main\">\n       {!chat.isGroupChat ? getSender(loggedUser, chat.users) :chat.chatName}\n       </Typography>\n     </Box>\n            ))}\n          </List>\n                 ) : (\n                     <ChatLoading/>\n                 )}\n     </Box>\n      }\n      </div>\n\n            \n    )\n}\n\nexport default MyChats;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/MyRooms.js",["306","307","308","309","310"],[],"import React, { useState, useEffect} from 'react'\nimport {ChatState} from \"../Context/ChatProvider\"\nimport axios from \"axios\";\nimport {Paper, Typography, Avatar} from \"@mui/material\"\nimport Box from \"@mui/material/Box\";\nimport List from \"@mui/material/List\";\nimport ChatLoading from \"../ChatPage/ChatLoading\"\nimport {getSender} from \"../Config/ChatLogics\"\nimport Button from '@mui/material/Button'\nimport Stack from \"@mui/material/Stack\"\nimport styled from '@emotion/styled';\n\nconst CustomSideBarItem = styled(Avatar)(() => ({\n  margin: \"5% 0%\",\n  padding: \"5%\",\n  \":hover\" : {\n      backgroundColor : 'red',\n      color : 'black',\n      position : 'relative'\n  },\n  cursor: 'pointer',\n  \n}));\n\n\n const MyRooms = ({ fetchAgain}) => {\n   \n    const [loggedUser, setLoggedUser] = useState();\n    const { selectedChat, setSelectedChat, user, chats, setChats} = ChatState();\n\n    const fetchChats = async () => {\n      if (!user._id) {\n        console.log(\"cant find _id\");\n        return;\n      }\n        // console.log(user._id);\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n              \n            },\n          };\n          \n          const { data } = await axios.get(\"/api/chat\", config);\n\n\n          setChats(data);\n              \n        } catch (error) {\n          console.log(\"Error fetching chats\")\n        }\n      };\n\n      useEffect(() => {\n        setLoggedUser(JSON.parse(localStorage.getItem(\"userinfo\")));\n        fetchChats();\n      }, []);\n\n    return (\n              <Box sx={{ backgroundColor:\"primary.main\", alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\", cursor: 'pointer'}}>\n               { chats ? (\n                            <List style = {{ maxHeight: 500, overflow: 'auto',}} fontSize=\"1rem\" >\n                                {chats.map((chat) => (\n                                    <CustomSideBarItem\n                                    onClick={() => setSelectedChat(chat)}\n                                    py={2}\n                                    borderRadius=\"5px\"\n                                    key={chat._id}\n                                    sx = {{display: chat.isGroupChat ? chat.chatName: \"none\"}}\n                                    >\n                                    \n                                    {/* <Avatar\n                                    sx={{marginRight:\"2%\"}}\n                                    size=\"sm\"\n                                    cursor=\"pointer\"\n                                    src={chats.pic} */}\n                                    \n                                    />\n                                        <Typography>\n                                            {!chat.isGroupChat \n                                            ? getSender(loggedUser, chat.users)\n                                            :chat.chatName}\n                                            \n                                        </Typography>\n                                        \n                                    </CustomSideBarItem>\n                                ))}\n                            </List>\n                        ) : (\n                            <ChatLoading/>\n                        )}\n            </Box>\n    )\n}\n\nexport default MyRooms;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ChatLoading.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/AddRoomPopup.js",["311","312","313"],[],"import { Stack, Box, Dialog, DialogTitle, DialogContent, Typography } from '@mui/material';\nimport * as React from \"react\";\nimport createRoomIcon from \"../img/create-room.png\";\nimport joinRoomIcon from \"../img/join-room.png\";\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport CreateRoom from './CreateRoom';\nimport JoinRoom from './JoinRoom';\nimport SuccessCreateRoom from './SuccessCreateRoom';\nimport GroupChatModal from '../Components/GroupChatModal'\n\nexport function AddRoomPopup(props) {\n\n  //dialog\n  const { onClose, open } = props;\n\n  //change page\n  const [page,setPage] = React.useState(0);\n\n  const handleClose = () => {\n    onClose(true);\n    setPage(0);\n  }; \n\n  const handleCreateRoom = () => {\n    setPage(1);\n  }\n\n  const handleJoinRoom = () => {\n    setPage(2);\n  }\n  \n  const getDialogtitle = (page) =>{\n    switch(page) {\n      case 0:\n        return <Typography variant='overline' fontSize=\"1.5rem\">Create/Join a room</Typography>;\n      case 1:\n        return <Typography variant='overline' fontSize=\"1.5rem\">Create a room</Typography>;\n      case 2:\n        return <Typography variant='overline' fontSize=\"1.5rem\">Join a room</Typography>;\n\n      case 3:\n        return <Typography variant='overline' fontSize=\"1.5rem\">Create a room successfully!</Typography>;\n      \n      case 4:\n        return <Typography variant='overline' fontSize=\"1.5rem\">Join a room successfully!</Typography>;\n\n      default:\n        return 'foo';\n    }\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Dialog fullWidth onClose={handleClose} open={open} sx={{ itemAlign: \"center\" }}>\n        <DialogTitle>\n          <Box onClick={handleClose}>\n            <HighlightOffIcon sx={{ cursor: 'pointer', float: 'right' }} />\n          </Box>\n        <Box textAlign=\"center\">\n        {getDialogtitle(page)}\n      </Box>\n        </DialogTitle>\n        <DialogContent>\n          {(() => {\n        if (page===0) {\n          return (\n            <Stack>\n            <GroupChatModal/>\n            <Box onClick= {handleJoinRoom} sx={{ border: \"1px solid\", borderRadius: \"3px\", alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\", cursor: 'pointer' }}>\n              <img src={joinRoomIcon} style={{ width: \"10%\" }} />\n              <Typography variant='overline' fontSize=\"1rem\">Join a room</Typography>\n              <ChevronRightIcon sx={{ float: \"right\", marginLeft: \"auto\" }} />\n            </Box>\n          </Stack>\n          )\n        } else if (page===1) {\n          return (\n            <CreateRoom  onClose={handleClose} setPage={setPage}/>\n          )\n        } else if (page===2) {\n          return (\n            <JoinRoom onClose={onClose}/>\n          )\n        }\n        else if (page===3) {\n          return (\n            <SuccessCreateRoom/>\n          )\n        }\n      })()}\n         \n        </DialogContent>\n      </Dialog>\n    </ThemeProvider>\n\n  );\n}\n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/MiddleSectionPage.js",["314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330"],[],"import React, { useEffect,useState } from 'react'\nimport { Stack, Box, Typography, Divider} from \"@mui/material\";\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\n\nimport LocationCityIcon from '@mui/icons-material/LocationCity';\nimport PeopleIcon from '@mui/icons-material/People';\n\nimport { ChatState} from '../Context/ChatProvider'\nimport { getSender} from '../Config/ChatLogics'\nimport UpdateGroupChatModal from '../ChatPage/UpdateGroupChatModal';\n\nimport styled from '@emotion/styled';\n\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst RoomMenu = styled(Typography)(() => ({\n  fontSize: '1rem',\n  \":hover\" : {\n      color : 'black'\n  },\n  cursor: 'pointer',\n}));\n\nfunction MiddleSectionPage({fetchAgain, setFetchAgain}){\n  const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [newMessage, setNewMessage] = useState();\n    const [socketConnected, setSocketConnected] = useState(false)\n    const [typing, setTyping] = useState(false);\n    const [istyping, setIsTyping] = useState(false);\n\n    const { user, selectedChat, setSelectedChat} = ChatState();\n\n    \n  const navigate = useNavigate();\n\n  const handleRouteChat = () => {\n    navigate(\"/main/room/chat\");\n  }\n\n  const handleRouteSubject = () => {\n    navigate(\"/main/room/subject\");\n  }\n\n  const handleRouteFile = () => {\n    navigate(\"/main/room/file\");\n  }\n\n  const handleRouteMember = () => {\n    navigate(\"/main/room/member\");\n  }\n\n    return(\n        <ThemeProvider theme={theme}>\n            <Stack sx={{bgcolor:\"primary.main\", width:\"100%\", height:\"100%\", overflow:\"auto\"}}>\n\n            <Box textAlign=\"center\" margin=\"2% 0%\">\n            <Typography\n        variant=\"h1\" fontSize=\"1.5rem\" color=\"secondary.main\" margin=\"5% 0%\"\n      >\n          {!selectedChat.isGroupChat ? (\n              <>\n                {getSender(user,selectedChat.users)}\n                {/* profilemodal */}\n              </>\n          ) : (\n              <>\n              {selectedChat.chatName.toUpperCase()}\n              \n              </>\n          )}\n      </Typography>\n      \n            \n            <Divider sx={{color:'primary.dark'}}/>\n            </Box>\n\n            <Stack alignItems=\"center\">\n            {/* <Box sx={{alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\"}}>\n              <LocationCityIcon sx={{color:\"primary.dark\"}}/>\n              <Typography color=\"primary.dark\" variant='h2' fontSize=\"1rem\">King Mongkut of Ladgrbang</Typography>\n            </Box> */}\n\n            <Box sx={{alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\"}}>\n            <UpdateGroupChatModal\n              fetchAgain={fetchAgain}\n              setFetchAgain={setFetchAgain}\n              \n              />\n            {/* <Typography color=\"primary.dark\" variant='h2' fontSize=\"1rem\">3</Typography> */}\n            </Box>\n            </Stack>\n\n            {/* <RoomMenu variant=\"h2\" color=\"secondary.main\" >Chats</RoomMenu> */}\n            <RoomMenu variant=\"h2\" color=\"secondary.main\" onClick={handleRouteChat}>Chat</RoomMenu>\n            <RoomMenu variant=\"h2\" color=\"secondary.main\" onClick={handleRouteSubject}>Subject</RoomMenu>\n            {/* <RoomMenu variant=\"h2\" color=\"secondary.main\" onClick={handleRouteFile}>Other Files</RoomMenu> */}\n            <RoomMenu variant=\"h2\" color=\"secondary.main\" onClick={handleRouteMember}>Members</RoomMenu>\n            \n\n            </Stack>\n        </ThemeProvider>\n    );\n}\n\nexport default MiddleSectionPage;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/AssignmentPage.js",["331","332"],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Config/ChatLogics.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/UserListItem.js",["333"],[],"import React from 'react'\nimport { ChatState } from '../Context/ChatProvider'\nimport { Typography, Avatar} from \"@mui/material\";\nimport { Box } from \"@mui/material\";\n\n\nconst UserListItem = ({user, handleFunction}) => {\n\n    return (\n        <Box onClick={handleFunction}\n        cursor=\"pointer\"\n        backgroundColor=\"#E8E8E8\"\n        sx={{\n            background: \"#E8E8E8\",\n            '&:hover':{\n                backgroundColor: \"#38B2AC\"\n            }\n        }}\n        w=\"100%\"\n        d=\"flex\"\n        alignItems=\"center\"\n        color=\"black\"\n        px={3}\n        py={2}\n        mb={2}\n        borderRadius=\"20px\"\n        >\n            <Avatar\n                mr={2}\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n            />\n            <Box>\n            <Typography>{user.name}</Typography>\n            <Typography fontSize=\"xs\">\n                <b>Email : </b>\n                {user.email}\n            </Typography>\n            </Box>\n        </Box>\n    )\n}\n\nexport default UserListItem;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/ScrollableChat.js",["334"],[],"import { Avatar,Typography,Box } from '@mui/material';\nimport Tooltip from '@mui/material/Tooltip';\nimport ReactScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../Config/ChatLogics\"\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ThemeProvider theme={theme}>\n<ReactScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{display:\"flex\"}} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n                <div style={{marginTop:\"2.5%\"}}> \n            <Tooltip title={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n                </div>\n                \n            )}\n            <div style={{marginLeft: isSameSenderMargin(messages, m, i, user._id),\n            marginTop: isSameUser(messages, m, i, user._id) ? 20 : 20}}>\n            {isSameSender(messages,m,i,user._id)?\n              <Typography variant=\"h2\" color=\"primary.dark\" sx={{\n            display: `${\n                  m.sender._id === user._id ? \"none\" : \"\"\n                }`,marginLeft:\"7%\",\n                fontSize:\"12px\",\n                marginBottom:\"5%\"\n            }}>\n              {m.sender.name}\n            </Typography>  : <div></div>\n            }\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#3f72af\" : \"#DBE2EF\"\n                }`,\n                color: `${\n                  m.sender._id === user._id ? \"#f9f7f7\" : \"black\"\n                }`,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",                \n              }}\n            >\n            {m.content}\n            </span>\n            </div>\n          \n          </div>\n        ))}\n    </ReactScrollableFeed>\n    </ThemeProvider>\n      \n    \n  );\n};\n\nexport default ScrollableChat;","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ChatPage/UpdateGroupChatModal.js",["335","336","337"],[],"import React from 'react'\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport { IconButton, Typography, FormControl , InputLabel, Input, FormHelperText, Button} from '@mui/material';\nimport Box from '@mui/material/Box'\nimport Modal from '@mui/material/Modal'\nimport {useState} from 'react'\nimport { ChatState} from \"../Context/ChatProvider\"\nimport UserBadgeItem from \"../millen/UserBadgeItem\"\nimport axios from \"axios\"\nimport UserListItem from './UserListItem'\n\nconst UpdateGroupChatModal = ({fetchAgain, setFetchAgain, fetchMessage}) => {\n    const [open, setOpen] = React.useState(false);\n    const [groupChatName, setGroupChatName] = useState();\n    const [search, setSearch] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [renameloading, setRenameLoading] = useState(false);\n\n    const { selectedChat, setSelectedChat, user } = ChatState();\n\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    \n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n      };\n\n      const handleRemove = async(user1) => {\n        if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n          console.log(\"only admin can remove\");\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/api/chat/groupremove`,\n            {\n              chatId: selectedChat._id,\n              userId: user1._id,\n            },\n            config\n          );\n        \n    \n          user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n\n          setFetchAgain(!fetchAgain);\n          fetchMessage();\n          setLoading(false);\n        } catch (error) {\n          console.log(error)\n          setLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n\n\n      const handleRename = async () => {\n        if (!groupChatName) return;\n    \n        try {\n          setRenameLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/api/chat/rename`,\n            {\n              chatId: selectedChat._id,\n              chatName: groupChatName,\n            },\n            config\n          );\n    \n          console.log(data._id);\n          // setSelectedChat(\"\");\n          setSelectedChat(data);\n          setFetchAgain(!fetchAgain);\n          setRenameLoading(false);\n        } catch (error) {\n          \n          setRenameLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n\n\n      const handleSearch = async (query) => {\n        setSearch(query);\n        if (!query) {\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.get(`/api/user?search=${search}`, config);\n          console.log(data);\n          setLoading(false);\n          setSearchResult(data);\n        } catch (error) {\n          \n        }\n      };\n\n      const handleAddUser = async (user1) => {\n        if (selectedChat.users.find((u) => u._id === user1._id)) {\n          console.log(\"user already in group\")\n          return;\n        }\n    \n        if (selectedChat.groupAdmin._id !== user._id) {\n          console.log(\"only admin can add\")\n          return;\n        }\n    \n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.put(\n            `/api/chat/groupadd`,\n            {\n              chatId: selectedChat._id,\n              userId: user1._id,\n            },\n            config\n          );\n    \n          setSelectedChat(data);\n          setFetchAgain(!fetchAgain);\n          setLoading(false);\n        } catch (error) {\n          console.log(error)\n          setLoading(false);\n        }\n        setGroupChatName(\"\");\n      };\n    \n  \n    return (\n      <div>\n        <GroupsIcon onClick={handleOpen} ></GroupsIcon>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              {selectedChat.chatName}\n            </Typography>\n            <Box id=\"modal-modal-description\" sx={{ mt: 2 }}>\n              {selectedChat.users.map(u =>(\n                <UserBadgeItem\n                key={u._id}\n                user={u}\n                handleFunction={() => handleRemove(u)}\n              />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n                \n                <Input value={groupChatName} \n                placeholder=\"user name\"\n                onChange={(e)=> setGroupChatName(e.target.value)}>user name</Input>\n                <Button\n                variant=\"solid\"\n                isLoading={renameloading}\n                onClick={handleRename}\n                >\n                Update\n                </Button>\n  {/* <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText> */}\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Button variant=\"ghost\" onClick={()=> handleRemove(user)} >Leave Group</Button>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 3)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleAddUser(user)}\n                  />\n                ))\n            )}\n\n          </Box>\n        </Modal>\n      </div>\n    );\n}\n\nexport default UpdateGroupChatModal","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/CreateRoom.js",["338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],[],"import React, {createRef, useRef} from \"react\";\nimport {Stack, TextField, Avatar, MenuItem, Button, Grid} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport styled from '@emotion/styled';\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\nimport { RedeemRounded } from \"@mui/icons-material\";\nimport Modal from '@mui/material/Modal';\nimport Typography from '@mui/material/Typography';\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport FormControl from '@mui/material/FormControl';\nimport Input from '@mui/material/Input'\nimport UserListItem from '../HomePage/HomePage'\nimport UserBadgeItem from '../millen/UserBadgeItem'\n\n\n// First Step\nconst CustomImagePicker = styled(Avatar)(() => ({\n  margin: \"5% 0%\",\n  width: \"70px\",\n  height: \"70px\",\n  \":hover\" : {\n      backgroundColor : 'red',\n      color : 'black',\n      position : 'relative'\n  },\n  cursor: 'pointer',\n}));\n\nconst schools = [\n  {\n    value: \"kmitl\",\n    label: \"King mongkut's institute of technology ladkrabang\",\n  },\n  {\n    value: \"home\",\n    label: \"Home\",\n  },\n];\n\n//Second Step\nfunction AddSubjectMainPage(){\n  return (\n    <Stack>\n      <TextField label=\"Subject name\"/>\n    </Stack>\n  )\n}\n\n// function NameBestMatePage(){\n//   return (\n//     <Stack>\n//     <Box  display=\"flex\"\n//   justifyContent=\"center\"\n//   alignItems=\"center\">\n//     <CustomImagePicker><AddPhotoAlternateIcon/></CustomImagePicker>\n//     </Box>\n//         <TextField label=\"Bot's name\" sx={{marginBottom:\"1rem\"}}/>\n//     </Stack>\n//   )\n// }\n\nexport default function CreateRoom(props,{children}){\n\n\n    const {onClose, setPage} = props;\n    const [school, setSchool] = React.useState(\"home\");\n    const imageRef = useRef(null);\n    const [image, setImage] = React.useState(null);\n    const [open, setOpen] = useState(false);\n    const [groupChatName, setGroupChatName] = useState();\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const { user, chats, setChats } = ChatState();\n\n    const handleChange = (event) => {\n      setSchool(event.target.value);\n    };\n\n    const handleSubmit = () => {\n      setPage(3);\n    }\n\n    const onImageClick = () =>{\n      imageRef.current.click();\n    }\n\n    const imageHandler = (e) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        if(reader.readyState === 2){\n          setImage(reader.result)\n        }\n      }\n      reader.readAsDataURL(e.target.files[0])\n      console.log(\"Hello\")\n    }\n    const handleSearch = async (query) => {\n      setSearch(query);\n      if (!query) {\n        return;\n      }\n\n      try {\n        setLoading(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n        setLoading(false);\n        setSearchResult(data);\n      } catch (error) {\n\n      }\n    };\n\n\n    return (\n      <Stack>\n      <Box  display=\"flex\"\n    justifyContent=\"center\"\n    alignItems=\"center\">\n      <input type=\"file\"  accept=\"image/*\" style={{display:\"none\"}} ref={imageRef} onChange={imageHandler}\n      />\n      <CustomImagePicker onClick={onImageClick} src={image}></CustomImagePicker>\n      </Box>\n          <TextField fullWidth label=\"Room's name\" sx={{marginBottom:\"1rem\"}} onChange={(e)=>setGroupChatName(e.target.value)}/>\n          <TextField sx={{marginBottom:\"1rem\"}} placeholder=\"add to room\"  onChange={(e)=>handleSearch(e.target.value)}>\n          \n            </TextField>\n      <Grid container justifyContent=\"flex-end\">\n      <Button sx={{width:\"10%\"}} onClick={handleSubmit}>Submit</Button>\n      </Grid>\n      </Stack>\n    );\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SuccessCreateRoom.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/GroupChatModal.js",["362","363","364","365"],[],"import React from 'react'\nimport { useState} from 'react'\nimport {Button, Box, Typography, Modal, FormControl, Input, TextField} from '@mui/material'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport createRoomIcon from \"../img/create-room.png\";\nimport axios from \"axios\";\n\nimport { ChatState } from \"../Context/ChatProvider\";\n\nimport UserListItem from '../ChatPage/UserListItem'\nimport UserBadgeItem from '../millen/UserBadgeItem'\n\nconst GroupChatModal = ({children}) => {\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n      };\n\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const [groupChatName, setGroupChatName] = useState();\n    const [selectedUsers, setSelectedUsers] = useState([]);\n    const [search, setSearch] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const { user, chats, setChats, rooms, setRooms } = ChatState();\n\n    const handleSearch = async (query) => {\n        setSearch(query);\n        if (!query) {\n          return;\n        }\n\n        try {\n          setLoading(true);\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n          setLoading(false);\n          setSearchResult(data);\n        } catch (error) {\n\n        }\n      };\n      const handleSubmit = async () => {\n        if (!groupChatName || !selectedUsers) {\n          return;\n        }\n\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          const { data } = await axios.post(\n            '/api/chat/group',\n            {\n              name: groupChatName,\n              users: JSON.stringify(selectedUsers.map((u) => u._id)),\n            },\n            config\n          );\n          setRooms([data, ...rooms]);\n          handleClose(false)\n        } catch (error) {\n        }\n      };\n      \n    const handleGroup = (userToAdd) => {\n        if (selectedUsers.includes(userToAdd)) {\n          return;\n        }\n\n        setSelectedUsers([...selectedUsers, userToAdd]);\n      };\n\n      const handleDelete = (delUser) => {\n        setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n      };\n    \n    return (\n        <div>\n        <Box onClick= {handleOpen} sx={{ border: \"1px solid\", borderRadius: \"3px\", margin: \"3% 0%\", alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\", cursor: 'pointer' }}>\n        <img src={createRoomIcon} style={{ width: \"10%\" }} />\n        <Typography variant='overline' fontSize=\"1rem\">Create a room</Typography>\n        <ChevronRightIcon sx={{ float: \"right\", marginLeft: \"auto\" }} />\n      </Box>\n\n      <Modal\n      open={open}\n      onClose={handleClose}\n    >\n      <Box  sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n          Create a room\n        </Typography>\n        <FormControl>\n            <TextField fullWidth sx={{marginBottom:\"1rem\"}} onChange={(e)=>setGroupChatName(e.target.value)}/>\n            <TextField sx={{marginBottom:\"1rem\"}} placeholder=\"add to room\"  onChange={(e)=>handleSearch(e.target.value)}/>\n        </FormControl>\n        <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n          {selectedUsers.map((u) => (\n            <UserBadgeItem\n              key={u._id}\n              user={u}\n              handleFunction={() => handleDelete(u)}\n            />\n          ))}\n        </Box>\n        {loading ? (\n          // <ChatLoading />\n          <div>Loading...</div>\n        ) : (\n          searchResult\n            ?.slice(0, 3)\n            .map((user) => (\n              <UserListItem\n                key={user._id}\n                user={user}\n                handleFunction={() => handleGroup(user)}\n              />\n            ))\n        )}\n        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n        <Button variant=\"ghost\" onClick={handleClose}>Close</Button>\n        <Button variant=\"ghost\" onClick={handleSubmit}>Create a room</Button>\n      </Typography>\n      </Box>\n    </Modal>\n    </div>\n\n    )\n}\n\nexport default GroupChatModal\n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/JoinRoom.js",["366"],[],"import { Stack, Typography, TextField, Grid, Button } from '@mui/material';\n\nexport default function JoinRoom(props){\n\n    const {onClose} = props;\n\n    const handleSubmit = () =>{\n        onClose(true)\n    }\n\n    return(\n        <Stack alignItems=\"center\">\n        <TextField placeholder=\"Type the invitation link such as dfdfdfd.co/dfd\"  fullWidth ></TextField>\n        {/* <Typography variant=\"subtitles\">Copy this invitation code and send it to your friend to join the room!</Typography> */}\n        <Grid container justifyContent=\"flex-end\">\n      <Button sx={{width:\"10%\"}} onClick={handleSubmit}>Join</Button>\n      </Grid>\n    </Stack>\n    )\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/millen/UserBadgeItem.js",[],[],"/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/SubjectPage.js",["367","368","369","370"],[],"import { Card, CardContent, CardActions,Stack, Box, Typography, Divider,Button} from \"@mui/material\";\nimport { ThemeProvider } from '@emotion/react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport theme from \"../ui/Theme\";\nimport SearchBar from \"../Components/SearchBar.js\";\nimport AddIcon from '@mui/icons-material/Add';\nimport axios from \"axios\"\nimport Slide from '@mui/material/Slide';\nimport List from '@mui/material/List'\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport {ChatState} from \"../Context/ChatProvider\"\nimport CircularProgress from \"@mui/material/CircularProgress\"\nimport React, { useState, useEffect } from 'react'\nimport AddSubjectPopUp from \"./AddSubjectPopUp\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function SubjectPage(){\n\n  const {selectedChat, user} = ChatState();\n\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [subjects, setSubjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const fetchSubjects = async () => {\n    if(!selectedChat._id){\n\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n\n        },\n      };\n\n      const { data } = await axios.get(`/api/subject/${selectedChat._id}`, config);\n\n      setSubjects(data)\n      // console.log(data)\n\n     setLoading(false) \n    } catch (error) {\n      console.log(\"Error fetching subjects\")\n      console.log(error)\n    }\n  };\n  useEffect(() => {\n    fetchSubjects();\n  }, [subjects]);\n\n    return(\n        <ThemeProvider theme={theme}>\n        <Box sx={{padding:\"1%\"}}> \n        <Stack direction=\"row\">\n        <Typography variant=\"h2\" fontSize=\"1.25rem\">List of subjects</Typography>\n        </Stack>\n      <Divider/>\n      <Box sx={{marginBottom:\"1%\"}}>\n      <SearchBar/>\n      </Box>\n        <Box sx={{display:\"flex\"}}>\n        <Button style={{backgroundColor:\"green\", margin:\"1% 0%\",marginLeft:\"auto\"}}variant=\"contained\" startIcon={<AddIcon/>} onClick={handleDialogOpen}>\n                Add Subject\n            </Button>\n        </Box>\n        {loading ? <CircularProgress/>\n        :\n        <div>\n        {subjects.map((subject) => (\n        <div>\n        <Card sx={{backgroundColor:\"secondary.main\"}} onClick = { () => {\n          navigate(`/main/room/subject/${subject._id}`, {state:{subjectName:subject.subjectName, teacherName:subject.teacherName,subjectId:subject._id}})\n        }}>\n              <CardContent sx={{width:\"100%\"}}>\n                <Typography variant=\"h3\" fontSize=\"2rem\" color=\"primary.dark\" >{subject.subjectName}</Typography>\n                <Typography variant=\"h4\" fontSize=\"1rem\" color=\"primary.main\">{subject.teacherName}</Typography>\n              </CardContent>\n          </Card>\n          <br />\n        </div>\n      ))}\n        </div>\n       \n        }      \n        </Box>\n      \n      {/* Dialog */}\n      <Dialog\n        open={dialogOpen}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleDialogClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle sx={{textAlign:\"center\"}}>{\"Add Subject to your room\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n          <AddSubjectPopUp/>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Cancel</Button>\n          <Button onClick={handleDialogClose}>Submit</Button>\n        </DialogActions>\n      </Dialog>\n\n        </ThemeProvider>\n    );\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/SubjectDetailPage.js",["371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390"],[],"import { Typography, MenuItem, TextField,Box, Grid,Button } from \"@mui/material\";\nimport { useState , useEffect} from \"react\";\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport \"./SubjectDetailPage.css\";\n\nimport AddIcon from '@mui/icons-material/Add';\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nimport { ChatState} from '../Context/ChatProvider'\n\nimport Slide from '@mui/material/Slide';\nimport axios from 'axios'\nimport AddFileModal from './AddFileModal'\nimport download from 'downloadjs'\nimport * as React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst weekSubject = [\n  {\n    number: 1,\n    date: \"12/12/21\",\n  },\n  {\n    number: 2,\n    date: \"24/12/21\",\n  },\n];\n\nexport default function SubjectDetail() {\n    const [tab, setTab] = useState(1);\n    const {selectedChat, user} = ChatState();\n    const [filesList, setFilesList] = useState([]);\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(true);\n    const [subjects, setSubjects] = useState([]);\n\n    const {state} = useLocation();\n    const {subjectName, teacherName, subjectId} = state;\n\n    const fetchSubjects = async () => {\n      if(!selectedChat._id){\n  \n        return;\n      }\n      try {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n  \n          },\n        };\n  \n        const { data } = await axios.get(`/api/subject/${selectedChat._id}`, config);\n  \n        setSubjects(data)\n  \n       setLoading(false) \n      } catch (error) {\n        console.log(\"Error fetching subjects\")\n        console.log(error)\n      }\n    };\n    useEffect(() => {\n      fetchSubjects();\n    }, []);\n\n    useEffect(() => {\n      const getFilesList = async () => {\n        try {\n          const config = {\n            headers: {\n              Authorization: `Bearer ${user.token}`,\n            },\n          };\n          setLoading(true);\n\n          const { data } = await axios.get(`/api/file/getAllFiles/${subjectId}`,config);\n\n          console.log(subjectId)\n          setFilesList(data);\n          console.log(data);\n          setLoading(false);\n        } catch (error) {\n          console.log(\"error get files list\");\n\n        }\n      };\n\n\n      getFilesList();\n    }, [filesList]);\n\n    const downloadFile = async (id, path, mimetype) => {\n      try {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n\n          },\n        };\n        console.log(id)\n        console.log(path)\n        console.log(mimetype)\n        const result = await axios.get(`/api/file/download/${id}`, {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          },\n          responseType: 'blob',\n        }, );\n        const split = path.split('/');\n        const filename = split[split.length - 1];\n        console.log(\"mai\")\n\n        return download(result.data, filename, mimetype);\n\n      } catch (error) {\n        console.log(error)\n        if (error.response && error.response.status === 400) {\n          console.log('Error,uyr');\n        }\n      }\n    };\n  \n    const changeTab = (index) => {\n      setTab(index);\n    };\n\n    \n    return (\n        <div style={{padding:\"2%\",width:'90%'}}>\n        <Typography variant=\"h2\">{subjectName}</Typography>\n        <Typography variant=\"subtitle2\">{teacherName}</Typography>\n        {/* <Typography variant=\"subtitle2\">\n          Class time : 13:00 PM - 15.00 PM\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          Mid-term examination : 30 Feb 2035, 13.00 AM - 15.00 PM\n        </Typography>\n        <Typography variant=\"subtitle2\">\n          Final examination : 30 April 2035, 13.00 AM - 15.00 PM\n        </Typography> */}\n        <br></br>\n        <div>\n  <div className=\"block_tab\">\n          <div\n            onClick={() => changeTab(1)}\n            className={tab === 1 ? \"tabs active-tabs\" : \"tabs\"}\n          >\n            Materials\n          </div>\n          <div\n            onClick={() => changeTab(2)}\n            className={tab === 2 ? \"tabs active-tabs\" : \"tabs\"}\n          >\n            Assignments{\" \"}\n          </div>\n          <div\n            onClick={() => changeTab(3)}\n            className={tab === 3 ? \"tabs active-tabs\" : \"tabs\"}\n          >\n            Notes\n          </div>\n          {/* <div className=\"drop_down\" sx={{borderRadius:\"10px\"}}>\n            <TextField select borderRadius = \"29\">\n              {weekSubject.map((week) => (\n                <MenuItem key={week.number} value={week.number}>\n                  {\"Week \" + week.number + \",\" + week.date}\n                </MenuItem>\n              ))}\n            </TextField>\n          </div> */}\n        </div>\n        <div className=\"content_container\">\n        <Box sx={{display:\"flex\",  margin:\"1% 0%\",marginLeft:\"auto\"}}>\n        {/* <Button style={{backgroundColor:\"green\", margin:\"1% 0%\",marginLeft:\"auto\"}}variant=\"contained\">\n            </Button> */}\n            <AddFileModal style={{backgroundColor:\"green\", margin:\"1% 0%\",marginLeft:\"auto\"}} subjectId={subjectId}/> \n          </Box>\n        <Grid container columns={{ xs: 4, sm: 8, md: 12 }} spacing={2}>\n            {Array.from(filesList).map((file, index) => (\n                <Grid item xs={2} sm={4} md={4} key={index}>\n                <Box sx={{backgroundColor:\"primary.dark\", borderRadius:\"5%\", height:\"20vh\",padding:\"5%\"}} onClick = { () => {\n          console.log(\"Window:\",window.location.href)\n          navigate(window.location.pathname+\"/file\");\n        }}>\n                <Typography variant=\"h1\" fontSize=\"1rem\" color=\"secondary.main\">{file.title}</Typography>\n                <Typography variant=\"h3\" fontSize=\"0.5rem\" color=\"secondary.main\">{file.description}</Typography>\n                <Typography variant=\"h3\" fontSize=\"0.5rem\" color=\"secondary.main\">{file.fileType}</Typography>\n                <a \n                  href=\"#/\"\n                  onClick={()=> \n                  downloadFile(file._id, file.file_path, file.file_mimetype)\n                  }\n                >\n                Download \n                </a>\n                </Box>\n                \n        </Grid>\n        ))}\n        </Grid>\n        </div>\n        </div>\n           {/* Dialog */}\n      {/* <Dialog\n        open={dialogOpen}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleDialogClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n        fullWidth\n        maxWidth=\"sm\"\n      >\n        <DialogTitle sx={{textAlign:\"center\"}}>{\"Add a material\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n          <Box>\n            <Typography variant=\"h2\" fontSize=\"1rem\">Title</Typography>\n            <TextField fullWidth sx={{marginBottom:\"2%\"}}></TextField>\n\n            <Typography variant=\"h2\" fontSize=\"1rem\">Description</Typography>\n            <TextField\n          id=\"outlined-multiline-static\"\n          fullWidth\n          multiline\n          rows={4}\n          sx={{marginBottom:\"2%\"}}\n        />\n\n<Typography variant=\"h2\" fontSize=\"1rem\">Attached File</Typography>\n<Button  variant=\"text\" startIcon={<AddIcon/>} >\n                Add New File\n            </Button>\n          </Box>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Cancel</Button>\n          <Button onClick={handleDialogClose}>Submit</Button>\n        </DialogActions>\n      </Dialog> */}\n\n        </div>\n    );\n  }\n  \n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/RoomPage/MemberPage.js",["391","392","393","394","395","396","397","398","399","400","401","402","403","404"],[],"import { Card, CardContent, CardActions,Stack, Box, Typography, Divider,Button, Avatar} from \"@mui/material\";\nimport { ThemeProvider } from '@emotion/react';\nimport theme from \"../ui/Theme\";\nimport SearchBar from \"../Components/SearchBar.js\";\nimport AddIcon from '@mui/icons-material/Add';\n\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\nimport ChatIcon from '@mui/icons-material/Chat';\n\nimport {ChatState} from \"../Context/ChatProvider\";\n\nimport axios from \"axios\";\nimport React from 'react';\n\nimport {useState} from 'react'\n\nimport UserBadgeItem from \"../millen/UserBadgeItem\"\n\nexport default function MemberPage({fetchAgain, setFetchAgain, fetchMessage}){\n\n    const { selectedChat, setSelectedChat, user } = ChatState();\n    const [open, setOpen] = React.useState(false);\n    const [groupChatName, setGroupChatName] = useState();\n    const [search, setSearch] = useState(\"\");\n    const [searchResult, setSearchResult] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [renameloading, setRenameLoading] = useState(false);\n\n    const handleRemove = async(user1) => {\n      if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n        console.log(\"only admin can remove\");\n        return;\n      }\n  \n      try {\n        setLoading(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.put(\n          `/api/chat/groupremove`,\n          {\n            chatId: selectedChat._id,\n            userId: user1._id,\n          },\n          config\n        );\n        setLoading(false);\n      } catch (error) {\n        console.log(error)\n        setLoading(false);\n      }\n      setGroupChatName(\"\");\n    };\n\n\n    const handleRename = async () => {\n      if (!groupChatName) return;\n  \n      try {\n        setRenameLoading(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.put(\n          `/api/chat/rename`,\n          {\n            chatId: selectedChat._id,\n            chatName: groupChatName,\n          },\n          config\n        );\n  \n        console.log(data._id);\n        // setSelectedChat(\"\");\n        setSelectedChat(data);\n        setFetchAgain(!fetchAgain);\n        setRenameLoading(false);\n      } catch (error) {\n        \n        setRenameLoading(false);\n      }\n      setGroupChatName(\"\");\n    };\n\n\n    const handleSearch = async (query) => {\n      setSearch(query);\n      if (!query) {\n        return;\n      }\n  \n      try {\n        setLoading(true);\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.get(`/api/user?search=${search}`, config);\n        console.log(data);\n        setLoading(false);\n        setSearchResult(data);\n      } catch (error) {\n        \n      }\n    };\n\n    const isAdmin = (u) =>{\n      if (selectedChat.groupAdmin._id === u ){\n        return true\n      }else{\n        return false\n      }\n    }\n\n    const ownRole = () =>{\n      if (selectedChat.groupAdmin._id === user._id ){\n        return true\n      }else{\n        return false\n      }\n    }\n\n    return(\n   <ThemeProvider theme={theme}>\n        <Box sx={{padding:\"1%\"}}> \n        <Box textAlign=\"center\">\n        <Typography variant=\"h2\" fontSize=\"1.25rem\">Members</Typography>\n        </Box>    \n        <Stack direction=\"row\"> \n        </Stack>\n      <Divider/>\n      <Box sx={{marginBottom:\"1%\"}}>\n      <SearchBar/>\n      </Box>\n\n        {selectedChat.users.map(u =>(\n        <Box sx={{ border: \"1px solid grey\", borderRadius: \"3px\", alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", padding: \"2%\", cursor: 'pointer', marginBottom:\"0.5%\"}}>\n              <Avatar sx={{marginRight:\"1rem\"}} src={u.pic}></Avatar>\n              <Stack direction=\"column\" spacing={-2}>\n              <Typography variant='overline' fontSize=\"1rem\">{u.name}</Typography>\n              {\n                isAdmin(u._id) ? <Typography>Admin</Typography> : <Typography>Member</Typography>\n              }\n              </Stack>\n              <div style={{marginLeft:\"auto\"}}>\n\n              <Button style={{backgroundColor:\"primary.main\"}}variant=\"contained\">\n                View Profile\n            </Button>\n            {\n                ownRole() ?             \n                <Button style={{backgroundColor:\"red\",marginLeft:\"0.2rem\"}}variant=\"contained\" startIcon={<PersonRemoveIcon/>} onClick={ ()=>handleRemove(u)}>\n               Remove from room\n            </Button> :\n            <div></div>\n              }\n\n              </div>\n\n            </Box>\n              \n              ))}\n        </Box>\n        </ThemeProvider>\n    )\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/Components/SearchBar.js",["405","406","407"],[],"import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport SearchIcon from '@mui/icons-material/Search';\nimport DirectionsIcon from '@mui/icons-material/Directions';\n\nexport default function SearchBar() {\n  return (\n    <Paper\n      component=\"form\"\n      sx={{display: 'flex', alignItems: 'center', width: '100%', marginTop:'1%'}}\n    >\n      <InputBase\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Search\"\n        inputProps={{ 'aria-label': 'Search' }}\n      />\n      <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/AddSubjectPopUp.js",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422"],[],"import \"./AddSubjectPopUp.css\";\nimport {\n  Stack,\n  Typography,\n  TextField,\n  MenuItem,\n  Box,\n  Grid,\n  Button\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\n\nimport { ChatState} from '../Context/ChatProvider'\nimport axios from 'axios'\n\nconst days = [\n  {\n    value: \"0\",\n    label: \"Sunday\",\n  },\n  {\n    value: \"1\",\n    label: \"Monday\",\n  },\n  {\n    value: \"2\",\n    label: \"Tuesday\",\n  },\n  {\n    value: \"3\",\n    label: \"Wednesday\",\n  },\n  {\n    value: \"4\",\n    label: \"Thursday\",\n  },\n  {\n    value: \"5\",\n    label: \"Friday\",\n  },\n  {\n    value: \"6\",\n    label: \"Saturday\",\n  },\n];\n\nconst TimeClass = () => {\n  return (\n    <div>\n      <Grid container>\n        <Grid xs={5.75}>\n          <TextField select sx={{ width: \"100%\" }}>\n            {days.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid xs={0.5}></Grid>\n        <Grid xs={5.75}>\n          <Grid container>\n            <Grid xs={5.5}>\n              <TextField\n                id=\"time\"\n                label=\"From\"\n                type=\"time\"\n                defaultValue=\"07:30\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 300, // 5 min\n                }}\n                sx={{ width: \"100%\" }}\n              />\n            </Grid>\n            <Grid xs={1}></Grid>\n            <Grid xs={5.5}>\n              <TextField\n                id=\"time\"\n                label=\"To\"\n                type=\"time\"\n                defaultValue=\"07:30\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 300, // 5 min\n                }}\n                sx={{ width: \"100%\" }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid xs={6}></Grid>\n      </Grid>\n      <br />\n    </div>\n  );\n};\n\nexport default function AddSubjectPopUp() {\n  const [numberTime, setNumberTime] = useState(1);\n  const [midtermDate, setMidtermDate] = React.useState(new Date('2018-01-01T00:00:00.000Z'));\n  const [finalDate, setFinalDate] = React.useState(new Date('2018-01-01T00:00:00.000Z'));\n\n  const { user, selectedChat} = ChatState();\n  const [subjectTitle, setSubjectTitle] = useState(\"\");\n  const [subjectProfessor, setSubjectProfessor] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [subjects, setSubjects] = useState([])\n\n\n  const isEqualOne = () => {\n    return numberTime === 1;\n  };\n\n  const handleOnSubmit = async() => {\n\n    setLoading(true)\n    if (!user._id) {\n      console.log(\"cant find _id\");\n      return;\n    }\n\n    try{\n      const config ={\n        headers: {\n          \n          Authorization: `Bearer ${user.token}`,\n        },\n      }\n\n      console.log(selectedChat._id)\n      console.log(subjectTitle)\n      console.log(subjectProfessor)\n\n      const {data} = await axios.post(\"/api/subject\",\n      {chatId: selectedChat._id,\n        subjectName: subjectTitle,\n        teacherName: subjectProfessor\n        \n      },\n      config\n      );\n      console.log(\"add subject success\")\n      console.log(data)\n\n      setSubjects(data)\n      console.log(subjects)\n\n    }catch(err){\n      setLoading(false)\n      console.log(err)\n    }\n  }\n\n\n  return (\n    <div className=\"form_container\">\n      <form>\n      \n        <Stack>\n        <TextField label=\"Subject\" sx={{ width: \"100%\" }} onChange={(e) => setSubjectProfessor(e.target.value)} />\n          <br />\n          <Grid container>\n            <Grid xs={5.75}>\n              <TextField label=\"Professor\" sx={{ width: \"100%\" }} onChange={(e) => setSubjectTitle(e.target.value)} />\n              \n            </Grid>\n            <Grid xs={0.5}></Grid> \n          <Button onClick={handleOnSubmit}>Submit</Button>\n  \n          </Grid>\n          <br />\n        <div>\n          </div>\n        </Stack>\n      </form>\n    </div>\n  );\n}\n\n","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/FilePage.js",["423","424","425"],[],"import { Box, Typography,Button } from \"@mui/material\";\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport { ChatState} from '../Context/ChatProvider'\n\nexport default function FilePage(){\n\n    const { user, selectedChat, setSelectedChat} = ChatState();\n    return(\n        <Box sx={{padding:\"2%\"}}>\n        <Box sx={{backgroundColor:\"primary.dark\", padding:\"2%\"}}>\n            <Box sx={{ alignItems: \"center\", display: \"flex\", flexWrap: \"wrap\", cursor: 'pointer', marginBottom:\"0.5%\"}}>\n            <Typography variant='h1' fontSize=\"2rem\" color=\"secondary.main\">Slide 1 : Variable</Typography>\n            <div style={{marginLeft:\"auto\"}}>\n            <Button style={{backgroundColor:\"grey\"}}variant=\"contained\" startIcon={<EditIcon/>}>\n                Edit\n            </Button>\n            <Button style={{backgroundColor:\"red\"}}variant=\"contained\" startIcon={<DeleteForeverIcon/>}>\n                Delete\n            </Button>\n            </div>\n            </Box>\n            <Typography variant='h2' fontSize=\"1rem\" color=\"secondary.main\">Description</Typography>\n            <Box bgcolor=\"primary.light\" height=\"150px\" marginBottom=\"2%\" padding=\"1%\">\n            <Typography variant='h2' fontSize=\"1rem\" color=\"secondary.main\">Variables are used to store information to be referenced and manipulated in a computer program. \n                They also provide a way of labeling data with a descriptive name</Typography>\n            </Box>\n            <Typography variant='h2' fontSize=\"1rem\" color=\"secondary.main\">Attached File</Typography>\n            <Box bgcolor=\"primary.light\" height=\"100px\">\n\n            </Box>\n        </Box>\n        </Box>\n\n    )\n}","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/ProfilePage/EditProdileModal.js",["426","427","428","429"],[],"import React, {useState} from 'react'\nimport axios from \"axios\"\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ChatState} from \"../Context/ChatProvider\"\nimport {Button, Box, Typography, Modal, FormControl, Input, TextField} from '@mui/material'\nimport Alert from \"@mui/material/Alert\"\n\n\nconst token = sessionStorage.getItem('token');\n\nconst EditProfileModal = ({user,children}) => {\n\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n      };\n\n    const { setUser} = ChatState();\n    const [userEmail, setUserEmail] = useState('');\n    const [userName, setUserName] = useState('');\n    const [userPassword, setUserPassword] = useState('');\n    const [userPic, setPic] = useState();\n\n    const [loading,setLoading] = useState(false)\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    \n  \n    const onEditProfile = async () => {\n\n      if (!userName || ! userEmail || !userPassword){\n        return;\n      }\n\n      try {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.put(\n          `/api/user/edit`,\n          {\n              _id: user._id,\n              name: userName,\n              email: userEmail,\n              password: userPassword,\n              pic: userPic,\n          },\n          config\n        );\n        setUser(data)\n        localStorage.setItem(\"userinfo\", JSON.stringify(data))\n        console.log(data)\n      \n        handleClose()\n\n      } catch (error) {\n      }\n      setUserEmail(\"\")\n      setUserName(\"\")\n      setUserPassword(\"\")\n    };\n    const postDetails = async (pics) =>{\n      setLoading(true)\n      if(pics === undefined){\n        <Alert variant=\"outlined\" severity=\"error\">\n          This is an error alert — check it out!</Alert>\n          return\n      }\n      if(pics.type === \"image/jpeg\" || \"image/png\"){\n        const data = new FormData()\n        data.append(\"file\", pics)\n        data.append(\"upload_preset\", \"Classmate\")\n        data.append(\"cloud_name\", \"dp1xewsqt\")\n        fetch(\"http://api.cloudinary.com/v1_1/dp1xewsqt/image/upload\", {\n          method:\"post\",\n          body: data,\n        })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString())\n          console.log(data.url.toString())\n          setLoading(false)\n        })\n        .catch((err) => {\n          console.log(err)\n          setLoading(false)\n        })\n      } else{\n        <Alert variant=\"outlined\" severity=\"error\">\n        This is an error alert — check it out!</Alert>\n      }\n    }\n\n    return (\n        <div>\n        <Button onClick={handleOpen} style={{backgroundColor:\"grey\", width:\"100%\"}}variant=\"contained\" startIcon={<EditIcon/>}>\n                Edit Profile\n        </Button>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n            <FormControl>\n                <Input value={userName}variant=\"h1\" fontSize=\"0.5rem\" placeholder=\"new name\" onChange={(e) => setUserName(e.target.value)}>Full Name :</Input>\n                <Input value={userEmail}variant=\"h1\" fontSize=\"0.5rem\"placeholder=\"new email\" onChange={(e) => setUserEmail(e.target.value)}>Username :</Input>\n                <Input value={userPassword}variant=\"h1\" fontSize=\"0.5rem\"placeholder=\"new password\" onChange={(e) => setUserPassword(e.target.value)}>Username :</Input>\n                <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={ (e) => \n                        postDetails(e.target.files[0])\n                      }\n                    />\n                <Button onClick={onEditProfile} style={{backgroundColor:\"grey\"}}variant=\"contained\">\n                Update\n            </Button>\n            </FormControl>\n        </Box>\n      </Modal>\n      \n\n    </div>\n    )\n}\n\nexport default EditProfileModal","/Users/thriblueblood/Desktop/SE/Year4_2/THESIS/pure/classmate/front-end/src/SubjectPage/AddFileModal.js",["430","431","432","433","434","435","436","437","438","439","440","441","442","443"],[],"\nimport AddIcon from '@mui/icons-material/Add';\nimport React, { useState , useRef, useEffect} from 'react'\nimport {FormControl, Input, Form, Button, FormGroup, Box, TextField, Grid, Typography, Modal} from '@mui/material'\nimport axios from 'axios'\nimport Dropzone from 'react-dropzone';\nimport {ChatState} from '../Context/ChatProvider'\nimport {getSender} from '../Config/ChatLogics'\nconst AddFileModal = (props) => {\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n      };\n\n    const {subjectId} = props;\n    \n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n    const {user, selectedChat} = ChatState();\n    const [loading, setLoading] = useState(false);\n    const [file, setFile] = useState(null); // state for storing actual image\n    const [fileType, setFileType] = useState('');\n    const [filesList, setFilesList] = useState([]);\n    const [state, setState] = useState({\n        title: '',\n        description: ''\n    });\n    const [previewSrc, setPreviewSrc] = useState('');\n    const [isPreviewAvailable, setIsPreviewAvailable] = useState(false); // state to show preview only for images\n    const dropRef = useRef();\n    const handleInputChange = (event) => {\n        setState({\n          ...state,\n          [event.target.name]: event.target.value\n        });\n      };\n\n      const onDrop = (files) => {\n        const [uploadedFile] = files;\n        setFile(uploadedFile);\n\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n          setPreviewSrc(fileReader.result);\n        };\n        fileReader.readAsDataURL(uploadedFile);\n        setIsPreviewAvailable(uploadedFile.name.match(/.(jpeg|jpg|png)$/));\n        dropRef.current.style.border = '2px dashed #e9ebeb';\n      };\n\n      const updateBorder = (dragState) => {\n        if (dragState === 'over') {\n          dropRef.current.style.border = '2px solid #000';\n        } else if (dragState === 'leave') {\n          dropRef.current.style.border = '2px dashed #e9ebeb';\n        }\n      };\n\n      const handleOnSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n          const { title, description } = state;\n\n          if (title.trim() !== '' && description.trim() !== '') {\n            if (file) {\n              const formData = new FormData();\n              formData.append('file', file);\n              formData.append('title', title);\n              formData.append('description', description);\n              formData.append('fileType', fileType);\n              formData.append('subjectId', props.subjectId )\n\n\n              await axios.post(`/api/file/upload`, formData, {\n                headers: {\n                    \"Content-Type\":'multipart/form-data',\n\n                }\n              });\n              console.log(formData);\n\n            } else {\n              console.log('Please select a file to add.');\n            }\n          } else {\n            console.log('Please enter all the field values.');\n          }\n        } catch (error) {\n          console.log(\"ERROR\")\n        }\n      };\n\n\n    return (\n        <div>\n         <Button style={{backgroundColor:\"green\", margin:\"1% 0%\",marginLeft:\"auto\"}}variant=\"contained\" startIcon={<AddIcon/>} onClick={handleOpen}>\n                Add New Material\n            </Button>\n        <Modal\n            open={open}\n            onClose={handleClose}>\n            <Box sx={style}>\n            <FormControl >\n            <TextField name=\"title\" type=\"text\" value={state.title || ''} onChange={handleInputChange} placeholder=\"Add title\"/>\n            <TextField name=\"description\" type=\"text\"  value={state.description || ''}onChange={handleInputChange} placeholder=\"Add Description\"/>\n            <div className=\"upload-section\">\n  <Dropzone onDrop={onDrop}\n  onDragEnter={() => updateBorder('over')}\n  onDragLeave={() => updateBorder('leave')}>\n    {({ getRootProps, getInputProps }) => (\n      <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef}>\n        <input {...getInputProps()} />\n        <p>Drag and drop a file OR click here to select a file</p>\n        {file && (\n          <div>\n            <strong>Selected file:</strong> {file.name}\n          </div>\n        )}\n      </div>\n    )}\n  </Dropzone>\n  {previewSrc ? (\n    isPreviewAvailable ? (\n      <div className=\"image-preview\">\n        <img className=\"preview-image\" src={previewSrc} alt=\"Preview\" style={{width:\"20%\"}}/>\n      </div>\n    ) : (\n      <div className=\"preview-message\">\n        <p>No preview available for this file</p>\n      </div>\n    )\n  ) : (\n    <Box height=\"3%\" width=\"3%\">\n      <p>Image preview will be shown here after selection</p>\n    </Box>\n  )}\n</div>\n                  <label for=\"firstname\">Upload</label>\n\n                <select value = {fileType} onChange={(e)=> setFileType(e.target.value)}>\n                  <option> Material </option>\n                  <option> Assignment </option>\n                  <option> Note </option>\n                </select>\n\n                <Button onClick={handleOnSubmit} type=\"submit\" >Submit</Button>\n                <Button type=\"reset\" >Reset</Button>\n            </FormControl>\n\n            </Box>\n\n        </Modal>\n            \n        </div>\n    )\n}\n\nexport default AddFileModal\n",{"ruleId":"444","severity":1,"message":"445","line":6,"column":10,"nodeType":"446","messageId":"447","endLine":6,"endColumn":23},{"ruleId":"448","replacedBy":"449"},{"ruleId":"450","replacedBy":"451"},{"ruleId":"444","severity":1,"message":"452","line":2,"column":9,"nodeType":"446","messageId":"447","endLine":2,"endColumn":20},{"ruleId":"444","severity":1,"message":"453","line":8,"column":18,"nodeType":"446","messageId":"447","endLine":8,"endColumn":27},{"ruleId":"444","severity":1,"message":"454","line":14,"column":10,"nodeType":"446","messageId":"447","endLine":14,"endColumn":18},{"ruleId":"444","severity":1,"message":"455","line":14,"column":20,"nodeType":"446","messageId":"447","endLine":14,"endColumn":25},{"ruleId":"444","severity":1,"message":"456","line":18,"column":10,"nodeType":"446","messageId":"447","endLine":18,"endColumn":15},{"ruleId":"444","severity":1,"message":"457","line":18,"column":16,"nodeType":"446","messageId":"447","endLine":18,"endColumn":24},{"ruleId":"444","severity":1,"message":"458","line":19,"column":10,"nodeType":"446","messageId":"447","endLine":19,"endColumn":14},{"ruleId":"444","severity":1,"message":"459","line":19,"column":16,"nodeType":"446","messageId":"447","endLine":19,"endColumn":23},{"ruleId":"444","severity":1,"message":"460","line":20,"column":10,"nodeType":"446","messageId":"447","endLine":20,"endColumn":17},{"ruleId":"444","severity":1,"message":"461","line":5,"column":27,"nodeType":"446","messageId":"447","endLine":5,"endColumn":33},{"ruleId":"444","severity":1,"message":"462","line":14,"column":9,"nodeType":"446","messageId":"447","endLine":14,"endColumn":17},{"ruleId":"444","severity":1,"message":"460","line":26,"column":10,"nodeType":"446","messageId":"447","endLine":26,"endColumn":17},{"ruleId":"463","severity":1,"message":"464","line":42,"column":17,"nodeType":"465","messageId":"466","endLine":42,"endColumn":19},{"ruleId":"444","severity":1,"message":"467","line":62,"column":9,"nodeType":"446","messageId":"447","endLine":62,"endColumn":20},{"ruleId":"444","severity":1,"message":"468","line":3,"column":48,"nodeType":"446","messageId":"447","endLine":3,"endColumn":54},{"ruleId":"444","severity":1,"message":"461","line":4,"column":27,"nodeType":"446","messageId":"447","endLine":4,"endColumn":33},{"ruleId":"444","severity":1,"message":"469","line":4,"column":34,"nodeType":"446","messageId":"447","endLine":4,"endColumn":40},{"ruleId":"444","severity":1,"message":"470","line":4,"column":42,"nodeType":"446","messageId":"447","endLine":4,"endColumn":47},{"ruleId":"444","severity":1,"message":"471","line":8,"column":8,"nodeType":"446","messageId":"447","endLine":8,"endColumn":18},{"ruleId":"444","severity":1,"message":"472","line":20,"column":21,"nodeType":"446","messageId":"447","endLine":20,"endColumn":31},{"ruleId":"444","severity":1,"message":"473","line":3,"column":7,"nodeType":"446","messageId":"447","endLine":3,"endColumn":11},{"ruleId":"444","severity":1,"message":"474","line":9,"column":8,"nodeType":"446","messageId":"447","endLine":9,"endColumn":15},{"ruleId":"444","severity":1,"message":"475","line":12,"column":8,"nodeType":"446","messageId":"447","endLine":12,"endColumn":12},{"ruleId":"444","severity":1,"message":"476","line":14,"column":9,"nodeType":"446","messageId":"447","endLine":14,"endColumn":18},{"ruleId":"444","severity":1,"message":"477","line":15,"column":8,"nodeType":"446","messageId":"447","endLine":15,"endColumn":24},{"ruleId":"444","severity":1,"message":"478","line":18,"column":8,"nodeType":"446","messageId":"447","endLine":18,"endColumn":13},{"ruleId":"444","severity":1,"message":"479","line":84,"column":12,"nodeType":"446","messageId":"447","endLine":84,"endColumn":22},{"ruleId":"444","severity":1,"message":"480","line":85,"column":13,"nodeType":"446","messageId":"447","endLine":85,"endColumn":25},{"ruleId":"444","severity":1,"message":"481","line":85,"column":44,"nodeType":"446","messageId":"447","endLine":85,"endColumn":48},{"ruleId":"444","severity":1,"message":"457","line":85,"column":57,"nodeType":"446","messageId":"447","endLine":85,"endColumn":65},{"ruleId":"444","severity":1,"message":"460","line":86,"column":12,"nodeType":"446","messageId":"447","endLine":86,"endColumn":19},{"ruleId":"444","severity":1,"message":"482","line":86,"column":21,"nodeType":"446","messageId":"447","endLine":86,"endColumn":31},{"ruleId":"444","severity":1,"message":"483","line":88,"column":12,"nodeType":"446","messageId":"447","endLine":88,"endColumn":19},{"ruleId":"444","severity":1,"message":"472","line":88,"column":21,"nodeType":"446","messageId":"447","endLine":88,"endColumn":31},{"ruleId":"444","severity":1,"message":"484","line":3,"column":14,"nodeType":"446","messageId":"447","endLine":3,"endColumn":18},{"ruleId":"444","severity":1,"message":"485","line":3,"column":39,"nodeType":"446","messageId":"447","endLine":3,"endColumn":46},{"ruleId":"444","severity":1,"message":"486","line":3,"column":64,"nodeType":"446","messageId":"447","endLine":3,"endColumn":69},{"ruleId":"444","severity":1,"message":"487","line":3,"column":71,"nodeType":"446","messageId":"447","endLine":3,"endColumn":81},{"ruleId":"444","severity":1,"message":"488","line":6,"column":8,"nodeType":"446","messageId":"447","endLine":6,"endColumn":16},{"ruleId":"444","severity":1,"message":"489","line":8,"column":8,"nodeType":"446","messageId":"447","endLine":8,"endColumn":25},{"ruleId":"444","severity":1,"message":"461","line":3,"column":27,"nodeType":"446","messageId":"447","endLine":3,"endColumn":33},{"ruleId":"444","severity":1,"message":"490","line":4,"column":8,"nodeType":"446","messageId":"447","endLine":4,"endColumn":23},{"ruleId":"444","severity":1,"message":"491","line":6,"column":10,"nodeType":"446","messageId":"447","endLine":6,"endColumn":13},{"ruleId":"444","severity":1,"message":"492","line":6,"column":15,"nodeType":"446","messageId":"447","endLine":6,"endColumn":25},{"ruleId":"444","severity":1,"message":"480","line":15,"column":11,"nodeType":"446","messageId":"447","endLine":15,"endColumn":23},{"ruleId":"444","severity":1,"message":"487","line":4,"column":49,"nodeType":"446","messageId":"447","endLine":4,"endColumn":59},{"ruleId":"444","severity":1,"message":"493","line":11,"column":8,"nodeType":"446","messageId":"447","endLine":11,"endColumn":18},{"ruleId":"444","severity":1,"message":"494","line":23,"column":12,"nodeType":"446","messageId":"447","endLine":23,"endColumn":23},{"ruleId":"444","severity":1,"message":"495","line":1,"column":25,"nodeType":"446","messageId":"447","endLine":1,"endColumn":31},{"ruleId":"444","severity":1,"message":"496","line":1,"column":28,"nodeType":"446","messageId":"447","endLine":1,"endColumn":43},{"ruleId":"444","severity":1,"message":"497","line":6,"column":8,"nodeType":"446","messageId":"447","endLine":6,"endColumn":28},{"ruleId":"444","severity":1,"message":"498","line":28,"column":12,"nodeType":"446","messageId":"447","endLine":28,"endColumn":27},{"ruleId":"444","severity":1,"message":"499","line":29,"column":12,"nodeType":"446","messageId":"447","endLine":29,"endColumn":18},{"ruleId":"444","severity":1,"message":"500","line":29,"column":20,"nodeType":"446","messageId":"447","endLine":29,"endColumn":29},{"ruleId":"444","severity":1,"message":"501","line":30,"column":22,"nodeType":"446","messageId":"447","endLine":30,"endColumn":33},{"ruleId":"444","severity":1,"message":"502","line":32,"column":33,"nodeType":"446","messageId":"447","endLine":32,"endColumn":48},{"ruleId":"444","severity":1,"message":"503","line":34,"column":12,"nodeType":"446","messageId":"447","endLine":34,"endColumn":17},{"ruleId":"444","severity":1,"message":"504","line":34,"column":18,"nodeType":"446","messageId":"447","endLine":34,"endColumn":26},{"ruleId":"505","severity":1,"message":"506","line":100,"column":8,"nodeType":"507","endLine":100,"endColumn":22,"suggestions":"508"},{"ruleId":"444","severity":1,"message":"509","line":4,"column":9,"nodeType":"446","messageId":"447","endLine":4,"endColumn":14},{"ruleId":"444","severity":1,"message":"495","line":9,"column":8,"nodeType":"446","messageId":"447","endLine":9,"endColumn":14},{"ruleId":"444","severity":1,"message":"510","line":10,"column":8,"nodeType":"446","messageId":"447","endLine":10,"endColumn":13},{"ruleId":"505","severity":1,"message":"511","line":49,"column":10,"nodeType":"507","endLine":49,"endColumn":12,"suggestions":"512"},{"ruleId":"513","severity":1,"message":"514","line":60,"column":187,"nodeType":"515","messageId":"466","endLine":60,"endColumn":194},{"ruleId":"444","severity":1,"message":"509","line":4,"column":9,"nodeType":"446","messageId":"447","endLine":4,"endColumn":14},{"ruleId":"444","severity":1,"message":"495","line":9,"column":8,"nodeType":"446","messageId":"447","endLine":9,"endColumn":14},{"ruleId":"444","severity":1,"message":"510","line":10,"column":8,"nodeType":"446","messageId":"447","endLine":10,"endColumn":13},{"ruleId":"444","severity":1,"message":"480","line":29,"column":13,"nodeType":"446","messageId":"447","endLine":29,"endColumn":25},{"ruleId":"505","severity":1,"message":"511","line":58,"column":10,"nodeType":"507","endLine":58,"endColumn":12,"suggestions":"516"},{"ruleId":"444","severity":1,"message":"517","line":3,"column":8,"nodeType":"446","messageId":"447","endLine":3,"endColumn":22},{"ruleId":"444","severity":1,"message":"518","line":27,"column":9,"nodeType":"446","messageId":"447","endLine":27,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":73,"column":15,"nodeType":"521","endLine":73,"endColumn":66},{"ruleId":"444","severity":1,"message":"522","line":1,"column":17,"nodeType":"446","messageId":"447","endLine":1,"endColumn":26},{"ruleId":"444","severity":1,"message":"523","line":6,"column":8,"nodeType":"446","messageId":"447","endLine":6,"endColumn":24},{"ruleId":"444","severity":1,"message":"524","line":7,"column":8,"nodeType":"446","messageId":"447","endLine":7,"endColumn":18},{"ruleId":"444","severity":1,"message":"525","line":27,"column":10,"nodeType":"446","messageId":"447","endLine":27,"endColumn":18},{"ruleId":"444","severity":1,"message":"526","line":27,"column":20,"nodeType":"446","messageId":"447","endLine":27,"endColumn":31},{"ruleId":"444","severity":1,"message":"460","line":28,"column":12,"nodeType":"446","messageId":"447","endLine":28,"endColumn":19},{"ruleId":"444","severity":1,"message":"482","line":28,"column":21,"nodeType":"446","messageId":"447","endLine":28,"endColumn":31},{"ruleId":"444","severity":1,"message":"527","line":29,"column":12,"nodeType":"446","messageId":"447","endLine":29,"endColumn":22},{"ruleId":"444","severity":1,"message":"528","line":29,"column":24,"nodeType":"446","messageId":"447","endLine":29,"endColumn":37},{"ruleId":"444","severity":1,"message":"498","line":30,"column":12,"nodeType":"446","messageId":"447","endLine":30,"endColumn":27},{"ruleId":"444","severity":1,"message":"529","line":30,"column":29,"nodeType":"446","messageId":"447","endLine":30,"endColumn":47},{"ruleId":"444","severity":1,"message":"499","line":31,"column":12,"nodeType":"446","messageId":"447","endLine":31,"endColumn":18},{"ruleId":"444","severity":1,"message":"500","line":31,"column":20,"nodeType":"446","messageId":"447","endLine":31,"endColumn":29},{"ruleId":"444","severity":1,"message":"530","line":32,"column":12,"nodeType":"446","messageId":"447","endLine":32,"endColumn":20},{"ruleId":"444","severity":1,"message":"501","line":32,"column":22,"nodeType":"446","messageId":"447","endLine":32,"endColumn":33},{"ruleId":"444","severity":1,"message":"502","line":34,"column":33,"nodeType":"446","messageId":"447","endLine":34,"endColumn":48},{"ruleId":"444","severity":1,"message":"531","line":47,"column":9,"nodeType":"446","messageId":"447","endLine":47,"endColumn":24},{"ruleId":"444","severity":1,"message":"532","line":2,"column":9,"nodeType":"446","messageId":"447","endLine":2,"endColumn":20},{"ruleId":"444","severity":1,"message":"533","line":2,"column":22,"nodeType":"446","messageId":"447","endLine":2,"endColumn":27},{"ruleId":"444","severity":1,"message":"534","line":2,"column":10,"nodeType":"446","messageId":"447","endLine":2,"endColumn":19},{"ruleId":"444","severity":1,"message":"491","line":1,"column":28,"nodeType":"446","messageId":"447","endLine":1,"endColumn":31},{"ruleId":"444","severity":1,"message":"487","line":3,"column":10,"nodeType":"446","messageId":"447","endLine":3,"endColumn":20},{"ruleId":"444","severity":1,"message":"535","line":3,"column":48,"nodeType":"446","messageId":"447","endLine":3,"endColumn":58},{"ruleId":"444","severity":1,"message":"536","line":3,"column":67,"nodeType":"446","messageId":"447","endLine":3,"endColumn":81},{"ruleId":"444","severity":1,"message":"537","line":1,"column":16,"nodeType":"446","messageId":"447","endLine":1,"endColumn":25},{"ruleId":"444","severity":1,"message":"538","line":2,"column":35,"nodeType":"446","messageId":"447","endLine":2,"endColumn":43},{"ruleId":"444","severity":1,"message":"539","line":5,"column":8,"nodeType":"446","messageId":"447","endLine":5,"endColumn":29},{"ruleId":"444","severity":1,"message":"540","line":6,"column":10,"nodeType":"446","messageId":"447","endLine":6,"endColumn":23},{"ruleId":"444","severity":1,"message":"486","line":7,"column":8,"nodeType":"446","messageId":"447","endLine":7,"endColumn":13},{"ruleId":"444","severity":1,"message":"492","line":8,"column":8,"nodeType":"446","messageId":"447","endLine":8,"endColumn":18},{"ruleId":"444","severity":1,"message":"532","line":12,"column":8,"nodeType":"446","messageId":"447","endLine":12,"endColumn":19},{"ruleId":"444","severity":1,"message":"533","line":13,"column":8,"nodeType":"446","messageId":"447","endLine":13,"endColumn":13},{"ruleId":"444","severity":1,"message":"541","line":14,"column":8,"nodeType":"446","messageId":"447","endLine":14,"endColumn":20},{"ruleId":"444","severity":1,"message":"542","line":15,"column":8,"nodeType":"446","messageId":"447","endLine":15,"endColumn":21},{"ruleId":"444","severity":1,"message":"543","line":31,"column":7,"nodeType":"446","messageId":"447","endLine":31,"endColumn":14},{"ruleId":"444","severity":1,"message":"544","line":43,"column":10,"nodeType":"446","messageId":"447","endLine":43,"endColumn":28},{"ruleId":"444","severity":1,"message":"545","line":67,"column":12,"nodeType":"446","messageId":"447","endLine":67,"endColumn":19},{"ruleId":"444","severity":1,"message":"546","line":68,"column":12,"nodeType":"446","messageId":"447","endLine":68,"endColumn":18},{"ruleId":"444","severity":1,"message":"458","line":71,"column":12,"nodeType":"446","messageId":"447","endLine":71,"endColumn":16},{"ruleId":"444","severity":1,"message":"459","line":71,"column":18,"nodeType":"446","messageId":"447","endLine":71,"endColumn":25},{"ruleId":"444","severity":1,"message":"547","line":72,"column":12,"nodeType":"446","messageId":"447","endLine":72,"endColumn":25},{"ruleId":"444","severity":1,"message":"548","line":73,"column":12,"nodeType":"446","messageId":"447","endLine":73,"endColumn":25},{"ruleId":"444","severity":1,"message":"549","line":73,"column":27,"nodeType":"446","messageId":"447","endLine":73,"endColumn":43},{"ruleId":"444","severity":1,"message":"550","line":75,"column":12,"nodeType":"446","messageId":"447","endLine":75,"endColumn":24},{"ruleId":"444","severity":1,"message":"460","line":76,"column":12,"nodeType":"446","messageId":"447","endLine":76,"endColumn":19},{"ruleId":"444","severity":1,"message":"456","line":78,"column":19,"nodeType":"446","messageId":"447","endLine":78,"endColumn":24},{"ruleId":"444","severity":1,"message":"457","line":78,"column":26,"nodeType":"446","messageId":"447","endLine":78,"endColumn":34},{"ruleId":"444","severity":1,"message":"551","line":80,"column":11,"nodeType":"446","messageId":"447","endLine":80,"endColumn":23},{"ruleId":"444","severity":1,"message":"533","line":3,"column":54,"nodeType":"446","messageId":"447","endLine":3,"endColumn":59},{"ruleId":"444","severity":1,"message":"456","line":37,"column":19,"nodeType":"446","messageId":"447","endLine":37,"endColumn":24},{"ruleId":"444","severity":1,"message":"457","line":37,"column":26,"nodeType":"446","messageId":"447","endLine":37,"endColumn":34},{"ruleId":"519","severity":1,"message":"520","line":100,"column":9,"nodeType":"521","endLine":100,"endColumn":62},{"ruleId":"444","severity":1,"message":"492","line":1,"column":17,"nodeType":"446","messageId":"447","endLine":1,"endColumn":27},{"ruleId":"444","severity":1,"message":"552","line":1,"column":29,"nodeType":"446","messageId":"447","endLine":1,"endColumn":40},{"ruleId":"444","severity":1,"message":"553","line":3,"column":10,"nodeType":"446","messageId":"447","endLine":3,"endColumn":14},{"ruleId":"444","severity":1,"message":"475","line":9,"column":8,"nodeType":"446","messageId":"447","endLine":9,"endColumn":12},{"ruleId":"505","severity":1,"message":"554","line":69,"column":6,"nodeType":"507","endLine":69,"endColumn":16,"suggestions":"555"},{"ruleId":"444","severity":1,"message":"538","line":1,"column":22,"nodeType":"446","messageId":"447","endLine":1,"endColumn":30},{"ruleId":"444","severity":1,"message":"453","line":1,"column":32,"nodeType":"446","messageId":"447","endLine":1,"endColumn":41},{"ruleId":"444","severity":1,"message":"495","line":1,"column":52,"nodeType":"446","messageId":"447","endLine":1,"endColumn":58},{"ruleId":"444","severity":1,"message":"556","line":3,"column":10,"nodeType":"446","messageId":"447","endLine":3,"endColumn":23},{"ruleId":"444","severity":1,"message":"557","line":4,"column":8,"nodeType":"446","messageId":"447","endLine":4,"endColumn":13},{"ruleId":"444","severity":1,"message":"558","line":7,"column":8,"nodeType":"446","messageId":"447","endLine":7,"endColumn":15},{"ruleId":"444","severity":1,"message":"559","line":9,"column":8,"nodeType":"446","messageId":"447","endLine":9,"endColumn":14},{"ruleId":"444","severity":1,"message":"560","line":10,"column":8,"nodeType":"446","messageId":"447","endLine":10,"endColumn":21},{"ruleId":"444","severity":1,"message":"561","line":11,"column":8,"nodeType":"446","messageId":"447","endLine":11,"endColumn":21},{"ruleId":"444","severity":1,"message":"562","line":12,"column":8,"nodeType":"446","messageId":"447","endLine":12,"endColumn":25},{"ruleId":"444","severity":1,"message":"563","line":13,"column":8,"nodeType":"446","messageId":"447","endLine":13,"endColumn":19},{"ruleId":"444","severity":1,"message":"564","line":24,"column":7,"nodeType":"446","messageId":"447","endLine":24,"endColumn":17},{"ruleId":"444","severity":1,"message":"565","line":28,"column":7,"nodeType":"446","messageId":"447","endLine":28,"endColumn":18},{"ruleId":"444","severity":1,"message":"566","line":43,"column":12,"nodeType":"446","messageId":"447","endLine":43,"endColumn":22},{"ruleId":"444","severity":1,"message":"567","line":43,"column":24,"nodeType":"446","messageId":"447","endLine":43,"endColumn":37},{"ruleId":"444","severity":1,"message":"460","line":45,"column":12,"nodeType":"446","messageId":"447","endLine":45,"endColumn":19},{"ruleId":"444","severity":1,"message":"568","line":46,"column":12,"nodeType":"446","messageId":"447","endLine":46,"endColumn":20},{"ruleId":"505","severity":1,"message":"554","line":76,"column":8,"nodeType":"507","endLine":76,"endColumn":10,"suggestions":"569"},{"ruleId":"505","severity":1,"message":"570","line":102,"column":8,"nodeType":"507","endLine":102,"endColumn":19,"suggestions":"571"},{"ruleId":"444","severity":1,"message":"572","line":106,"column":15,"nodeType":"446","messageId":"447","endLine":106,"endColumn":21},{"ruleId":"444","severity":1,"message":"573","line":1,"column":10,"nodeType":"446","messageId":"447","endLine":1,"endColumn":14},{"ruleId":"444","severity":1,"message":"574","line":1,"column":16,"nodeType":"446","messageId":"447","endLine":1,"endColumn":27},{"ruleId":"444","severity":1,"message":"552","line":1,"column":29,"nodeType":"446","messageId":"447","endLine":1,"endColumn":40},{"ruleId":"444","severity":1,"message":"558","line":5,"column":8,"nodeType":"446","messageId":"447","endLine":5,"endColumn":15},{"ruleId":"444","severity":1,"message":"575","line":8,"column":8,"nodeType":"446","messageId":"447","endLine":8,"endColumn":16},{"ruleId":"444","severity":1,"message":"542","line":17,"column":8,"nodeType":"446","messageId":"447","endLine":17,"endColumn":21},{"ruleId":"444","severity":1,"message":"458","line":22,"column":12,"nodeType":"446","messageId":"447","endLine":22,"endColumn":16},{"ruleId":"444","severity":1,"message":"459","line":22,"column":18,"nodeType":"446","messageId":"447","endLine":22,"endColumn":25},{"ruleId":"444","severity":1,"message":"550","line":25,"column":12,"nodeType":"446","messageId":"447","endLine":25,"endColumn":24},{"ruleId":"444","severity":1,"message":"460","line":26,"column":12,"nodeType":"446","messageId":"447","endLine":26,"endColumn":19},{"ruleId":"444","severity":1,"message":"576","line":27,"column":12,"nodeType":"446","messageId":"447","endLine":27,"endColumn":25},{"ruleId":"444","severity":1,"message":"577","line":42,"column":17,"nodeType":"446","messageId":"447","endLine":42,"endColumn":21},{"ruleId":"444","severity":1,"message":"578","line":59,"column":11,"nodeType":"446","messageId":"447","endLine":59,"endColumn":23},{"ruleId":"444","severity":1,"message":"579","line":91,"column":11,"nodeType":"446","messageId":"447","endLine":91,"endColumn":23},{"ruleId":"444","severity":1,"message":"485","line":4,"column":8,"nodeType":"446","messageId":"447","endLine":4,"endColumn":15},{"ruleId":"444","severity":1,"message":"580","line":6,"column":8,"nodeType":"446","messageId":"447","endLine":6,"endColumn":16},{"ruleId":"444","severity":1,"message":"581","line":8,"column":8,"nodeType":"446","messageId":"447","endLine":8,"endColumn":22},{"ruleId":"444","severity":1,"message":"492","line":4,"column":3,"nodeType":"446","messageId":"447","endLine":4,"endColumn":13},{"ruleId":"444","severity":1,"message":"491","line":7,"column":3,"nodeType":"446","messageId":"447","endLine":7,"endColumn":6},{"ruleId":"444","severity":1,"message":"582","line":12,"column":10,"nodeType":"446","messageId":"447","endLine":12,"endColumn":24},{"ruleId":"444","severity":1,"message":"583","line":13,"column":10,"nodeType":"446","messageId":"447","endLine":13,"endColumn":30},{"ruleId":"444","severity":1,"message":"584","line":14,"column":10,"nodeType":"446","messageId":"447","endLine":14,"endColumn":24},{"ruleId":"444","severity":1,"message":"585","line":50,"column":7,"nodeType":"446","messageId":"447","endLine":50,"endColumn":16},{"ruleId":"444","severity":1,"message":"586","line":107,"column":22,"nodeType":"446","messageId":"447","endLine":107,"endColumn":35},{"ruleId":"444","severity":1,"message":"587","line":108,"column":10,"nodeType":"446","messageId":"447","endLine":108,"endColumn":21},{"ruleId":"444","severity":1,"message":"588","line":108,"column":23,"nodeType":"446","messageId":"447","endLine":108,"endColumn":37},{"ruleId":"444","severity":1,"message":"589","line":109,"column":10,"nodeType":"446","messageId":"447","endLine":109,"endColumn":19},{"ruleId":"444","severity":1,"message":"590","line":109,"column":21,"nodeType":"446","messageId":"447","endLine":109,"endColumn":33},{"ruleId":"444","severity":1,"message":"460","line":114,"column":10,"nodeType":"446","messageId":"447","endLine":114,"endColumn":17},{"ruleId":"444","severity":1,"message":"566","line":115,"column":10,"nodeType":"446","messageId":"447","endLine":115,"endColumn":20},{"ruleId":"444","severity":1,"message":"567","line":115,"column":22,"nodeType":"446","messageId":"447","endLine":115,"endColumn":35},{"ruleId":"444","severity":1,"message":"591","line":119,"column":9,"nodeType":"446","messageId":"447","endLine":119,"endColumn":19},{"ruleId":"444","severity":1,"message":"481","line":9,"column":13,"nodeType":"446","messageId":"447","endLine":9,"endColumn":17},{"ruleId":"444","severity":1,"message":"480","line":9,"column":19,"nodeType":"446","messageId":"447","endLine":9,"endColumn":31},{"ruleId":"444","severity":1,"message":"502","line":9,"column":33,"nodeType":"446","messageId":"447","endLine":9,"endColumn":48},{"ruleId":"444","severity":1,"message":"492","line":5,"column":22,"nodeType":"446","messageId":"447","endLine":5,"endColumn":32},{"ruleId":"444","severity":1,"message":"453","line":5,"column":61,"nodeType":"446","messageId":"447","endLine":5,"endColumn":70},{"ruleId":"444","severity":1,"message":"592","line":9,"column":7,"nodeType":"446","messageId":"447","endLine":9,"endColumn":12},{"ruleId":"444","severity":1,"message":"460","line":32,"column":12,"nodeType":"446","messageId":"447","endLine":32,"endColumn":19},{"ruleId":"444","severity":1,"message":"522","line":3,"column":36,"nodeType":"446","messageId":"447","endLine":3,"endColumn":45},{"ruleId":"444","severity":1,"message":"533","line":4,"column":22,"nodeType":"446","messageId":"447","endLine":4,"endColumn":27},{"ruleId":"444","severity":1,"message":"593","line":4,"column":29,"nodeType":"446","messageId":"447","endLine":4,"endColumn":33},{"ruleId":"444","severity":1,"message":"594","line":4,"column":43,"nodeType":"446","messageId":"447","endLine":4,"endColumn":52},{"ruleId":"444","severity":1,"message":"484","line":4,"column":70,"nodeType":"446","messageId":"447","endLine":4,"endColumn":74},{"ruleId":"444","severity":1,"message":"492","line":4,"column":76,"nodeType":"446","messageId":"447","endLine":4,"endColumn":86},{"ruleId":"444","severity":1,"message":"476","line":8,"column":9,"nodeType":"446","messageId":"447","endLine":8,"endColumn":18},{"ruleId":"444","severity":1,"message":"595","line":22,"column":12,"nodeType":"446","messageId":"447","endLine":22,"endColumn":21},{"ruleId":"444","severity":1,"message":"481","line":27,"column":12,"nodeType":"446","messageId":"447","endLine":27,"endColumn":16},{"ruleId":"444","severity":1,"message":"480","line":27,"column":18,"nodeType":"446","messageId":"447","endLine":27,"endColumn":30},{"ruleId":"444","severity":1,"message":"460","line":28,"column":12,"nodeType":"446","messageId":"447","endLine":28,"endColumn":19},{"ruleId":"444","severity":1,"message":"482","line":28,"column":21,"nodeType":"446","messageId":"447","endLine":28,"endColumn":31},{"ruleId":"444","severity":1,"message":"596","line":31,"column":12,"nodeType":"446","messageId":"447","endLine":31,"endColumn":21},{"ruleId":"444","severity":1,"message":"597","line":31,"column":23,"nodeType":"446","messageId":"447","endLine":31,"endColumn":35},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-native-reassign",["598"],"no-negated-in-lhs",["599"],"'useNavigate' is defined but never used.","'TextField' is defined but never used.","'maxWidth' is defined but never used.","'width' is defined but never used.","'chats' is assigned a value but never used.","'setChats' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'loading' is assigned a value but never used.","'Router' is defined but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'postDetails' is assigned a value but never used.","'Avatar' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'SingleChat' is defined but never used.","'setResetDM' is assigned a value but never used.","'blue' is assigned a value but never used.","'MyRooms' is defined but never used.","'List' is defined but never used.","'getSender' is defined but never used.","'CircularProgress' is defined but never used.","'axios' is defined but never used.","'loggedUser' is assigned a value but never used.","'selectedChat' is assigned a value but never used.","'user' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'resetDM' is assigned a value but never used.","'Grid' is defined but never used.","'Divider' is defined but never used.","'Modal' is defined but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'ChatSectionPage' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'SearchIcon' is defined but never used.","'loadingChat' is assigned a value but never used.","'Button' is defined but never used.","'useLayoutEffect' is defined but never used.","'UpdateGroupChatModal' is defined but never used.","'socketConnected' is assigned a value but never used.","'typing' is assigned a value but never used.","'setTyping' is assigned a value but never used.","'setIsTyping' is assigned a value but never used.","'setSelectedChat' is assigned a value but never used.","'reset' is assigned a value but never used.","'setReset' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.","ArrayExpression",["600"],"'Paper' is defined but never used.","'Stack' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.",["601"],"no-dupe-keys","Duplicate key 'display'.","ObjectExpression",["602"],"'createRoomIcon' is defined but never used.","'handleCreateRoom' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'LocationCityIcon' is defined but never used.","'PeopleIcon' is defined but never used.","'messages' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'newMessage' is assigned a value but never used.","'setNewMessage' is assigned a value but never used.","'setSocketConnected' is assigned a value but never used.","'istyping' is assigned a value but never used.","'handleRouteFile' is assigned a value but never used.","'FormControl' is defined but never used.","'Input' is defined but never used.","'ChatState' is defined but never used.","'InputLabel' is defined but never used.","'FormHelperText' is defined but never used.","'createRef' is defined but never used.","'MenuItem' is defined but never used.","'AddPhotoAlternateIcon' is defined but never used.","'RedeemRounded' is defined but never used.","'UserListItem' is defined but never used.","'UserBadgeItem' is defined but never used.","'schools' is assigned a value but never used.","'AddSubjectMainPage' is defined but never used.","'onClose' is assigned a value but never used.","'school' is assigned a value but never used.","'groupChatName' is assigned a value but never used.","'selectedUsers' is assigned a value but never used.","'setSelectedUsers' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'CardActions' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchSubjects'. Either include it or remove the dependency array.",["603"],"'ThemeProvider' is defined but never used.","'theme' is defined but never used.","'AddIcon' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Transition' is assigned a value but never used.","'weekSubject' is assigned a value but never used.","'dialogOpen' is assigned a value but never used.","'setDialogOpen' is assigned a value but never used.","'subjects' is assigned a value but never used.",["604"],"React Hook useEffect has missing dependencies: 'subjectId' and 'user.token'. Either include them or remove the dependency array.",["605"],"'config' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'ChatIcon' is defined but never used.","'renameloading' is assigned a value but never used.","'data' is assigned a value but never used.","'handleRename' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","'MenuIcon' is defined but never used.","'DirectionsIcon' is defined but never used.","'AdapterDateFns' is defined but never used.","'LocalizationProvider' is defined but never used.","'DateTimePicker' is defined but never used.","'TimeClass' is assigned a value but never used.","'setNumberTime' is assigned a value but never used.","'midtermDate' is assigned a value but never used.","'setMidtermDate' is assigned a value but never used.","'finalDate' is assigned a value but never used.","'setFinalDate' is assigned a value but never used.","'isEqualOne' is assigned a value but never used.","'token' is assigned a value but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'subjectId' is assigned a value but never used.","'filesList' is assigned a value but never used.","'setFilesList' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"608","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},"Update the dependencies array to be: [fetchMessages, selectedChat]",{"range":"617","text":"618"},"Update the dependencies array to be: [fetchChats]",{"range":"619","text":"620"},{"range":"621","text":"620"},"Update the dependencies array to be: [fetchSubjects, subjects]",{"range":"622","text":"623"},"Update the dependencies array to be: [fetchSubjects]",{"range":"624","text":"625"},"Update the dependencies array to be: [filesList, subjectId, user.token]",{"range":"626","text":"627"},[2964,2978],"[fetchMessages, selectedChat]",[1533,1535],"[fetchChats]",[1523,1525],[1992,2002],"[fetchSubjects, subjects]",[2121,2123],"[fetchSubjects]",[2699,2710],"[filesList, subjectId, user.token]"]